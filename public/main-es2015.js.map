{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/basic/basic.component.ts","./src/app/basic/basic.component.html","./src/app/createcomment/createcomment.component.ts","./src/app/createcomment/createcomment.component.html","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/header-detail/header-detail.component.ts","./src/app/header-detail/header-detail.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/journey-report/journey-report.component.ts","./src/app/journey-report/journey-report.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/public-page/public-page.component.ts","./src/app/public-page/public-page.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.component.html","./src/app/supervisior/supervisior.component.ts","./src/app/supervisior/supervisior.component.html","./src/app/unauthorised/unauthorised.component.ts","./src/app/unauthorised/unauthorised.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  roles: string;\n  users: any[];\n  showPasswordResetForm: boolean = false;\n  oldPassword: string;\n  newPassword: string;\n  email:string;\n  user: unknown;\n\n  constructor(private router: Router, private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.roles = localStorage.getItem('role'); \n  \n    if (!this.roles) {\n      this.router.navigate(['/login']);\n      return; \n    }\n  \n    if (this.roles !== 'admin') {\n      alert('Checking credentials admin');\n      this.router.navigate(['/unauthorisied']);\n      return; \n    }\n  \n    this.apiService.getusers().subscribe(\n      (response) => {\n        this.users = response;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.email = this.user['email'];\n  }\n  \n\n  performDelete(id: number): void {\n    this.apiService.deleteUser(id).subscribe(\n      () => {\n        console.log('User deleted successfully');\n      },\n      (error) => {\n        console.error('Failed to delete user:', error);\n      }\n    );\n  }\n\n  performUpdate(id: number): void {\n    const user = this.users.find(u => u.id === id);\n    if (!user) return;\n  \n    user.isEditing = true; // Enable editing mode\n  \n    const userData = {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n      roles: user.roles\n    };\n  \n    this.apiService.updateUser(id, userData).subscribe(\n      (response) => {\n        console.log('User updated successfully');\n        \n      },\n      (error) => {\n        console.error('Failed to update user:', error);\n     \n      }\n    );\n  }\n  \n  cancelUpdate(user: any): void {\n    user.isEditing = false; // Disable editing mode\n  }\n\n  onResetPassword() {\n    this.showPasswordResetForm = true;\n  }\n\n  cancelResetPassword() {\n    this.showPasswordResetForm = false;\n    this.oldPassword = '';\n    this.newPassword = '';\n  }\n\n  onResetPasswordSubmit() {\n    this.apiService. resetP(this.email,this.oldPassword, this.newPassword).subscribe(\n      () => {\n       \n        this.showAlert('success', 'Password reset successfully');\n     \n        this.cancelResetPassword();\n      },\n      (error) => {\n        console.error(error);\n        this.showAlert('error', 'Failed to reset password');\n      }\n    );\n  }\n\n  showAlert(type: string, message: string) {\n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n\n  logout(): void {\n    this.apiService.logout().subscribe(\n      (response) => {\n        // Clear the token, role, and user from local storage\n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        localStorage.removeItem('user');\n        console.log('Logged out successfully');\n  \n        // Get the expiration time from the response\n        const expirationTime = response.expirationTime;\n  \n        // Use the expiration time if needed\n        console.log(`Token expired at: ${new Date(expirationTime)}`);\n  \n        sessionStorage.clear();\n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Logout failed:', error);\n      }\n    );\n  }\n}\n","<div *ngIf=\"roles === 'admin'\">\n  <h1>Welcome, Admin!</h1>\n  <p>This is the admin dashboard.</p>\n  <!-- <button class=\"btn logout-button red-button\" (click)=\"logout()\">Logout</button> -->\n  <button (click)=\"logout()\">Logout</button>\n  <button (click)=\"showPasswordResetForm = true\">Reset Password</button>\n\n  <div *ngIf=\"showPasswordResetForm\">\n    <h2>Password Reset</h2>\n    <form (submit)=\"onResetPasswordSubmit()\">\n      <label for=\"oldPassword\">Old Password:</label>\n      <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" [(ngModel)]=\"oldPassword\" required>\n\n      <label for=\"newPassword\">New Password:</label>\n      <input type=\"password\" id=\"newPassword\" name=\"newPassword\" [(ngModel)]=\"newPassword\" required>\n\n      <button type=\"submit\">Reset Password</button>\n      <button type=\"button\" (click)=\"cancelResetPassword()\">Cancel</button>\n    </form>\n  </div>\n\n  <table>\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Roles</th>\n      </tr>\n    </thead>\n    <tbody>\n      <ng-container *ngFor=\"let user of users\">\n        <tr>\n          <td>{{ user.id }}</td>\n          <td>{{ user.name }}</td>\n          <td>{{ user.email }}</td>\n          <td>\n            <button (click)=\"performDelete(user.id)\">Delete</button>\n            <button (click)=\"performUpdate(user.id)\">Update</button>\n          </td>\n        </tr>\n        <tr *ngIf=\"user.isEditing\">\n          <td colspan=\"4\">\n            <form (submit)=\"performUpdate(user.id)\">\n              <label for=\"name\">Name:</label>\n              <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"user.name\" required>\n              \n              <label for=\"email\">Email:</label>\n              <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"user.email\" required>\n              \n              <label for=\"password\">Password:</label>\n              <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"user.password\" required>\n              \n              <label for=\"roles\">Actions:</label>\n              <input type=\"text\" id=\"roles\" name=\"roles\" [(ngModel)]=\"user.roles\" required>\n              \n\n           \n\n              <button type=\"submit\">Update</button>\n              <button (click)=\"cancelUpdate(user)\">Cancel</button>\n            </form>\n          </td>\n        </tr>\n      </ng-container>\n    </tbody>\n  </table>\n\n  \n</div>\n\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { id } from 'date-fns/locale';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  fetchCommentsForPosts(postId: number) {\n    throw new Error('Method not implemented.');\n  }\n  private baseUrl = 'http://localhost:4000'; \n  httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n\n  token = localStorage.getItem('token');\n  \n  httpTokenHeaders = new HttpHeaders().set('Authorization', `Bearer ${this.token}`)\n\n\n  constructor(private http: HttpClient) { }\n\n  // createUser(role: any): Observable<any> {\n  //   const url = `${this.baseUrl}/createusers`;\n  //   return this.http.post(url, role, { headers: this.httpHeaders });\n  // }\n  createUser(data: any): Observable<any> {\n    const url = `${this.baseUrl}/createusers`;\n    const headers = this.getAuthHeaders().set('Content-Type', 'application/json');\n    return this.http.post(url, data, { headers });\n   \n  }\n  // resetPasswordd(userId: string) {\n  //   return this.http.post<any>(`${this.baseUrl}/forget-password`, { userId });\n  // }\n  \n  resetP(email:string,oldPassword: string, newPassword: string) {\n    const resetData = { email,oldPassword, newPassword };\n    const token = localStorage.getItem('token');\n    const headers = { Authorization: `Bearer ${token}` };\n  \n    return this.http.post<any>('http://localhost:4000/reset-passwordd', resetData, { headers });\n  }\n  \n  \n  getusers(): Observable<any> {\n    const url = `${this.baseUrl}/getusers`;\n    return this.http.get(url);\n  }\n\n  login(email: string, password: string): Observable<any> {\n    const url = `${this.baseUrl}/login`;\n    return this.http.post(url, { email, password });\n  }\n\n  deleteUser(id: number): Observable<any> {\n    const url = `${this.baseUrl}/deleteUsers/${id}`;\n    const headers = this.getAuthHeaders();\n    return this.http.delete(url, { headers });\n  }\n\n  updateUser(id: number, userData: any): Observable<any> {\n    const url = `${this.baseUrl}/updateUsers/${id}`;\n    const headers = this.getAuthHeaders();\n    return this.http.put(url, userData, { headers });\n  }\n\n  getUser(): Observable<any> {\n    const url = `${this.baseUrl}/getuser`;\n    const headers = this.getAuthHeaders();\n    return this.http.get(url, { headers });\n  }\n\n  updateUserss( id:number,name: string,): Observable<any> {\n    const url = `${this.baseUrl}/updateUser`;\n    const data = { id: id, name: name }; \n    return this.http.put(url, data);\n  }\n\n  public getAuthHeaders(): HttpHeaders {\n    const token = localStorage.getItem('token');\n    const headers = this.httpHeaders;\n    if (token) {\n      return headers.set('Authorization', `Bearer ${token}`);\n    }\n    return headers;\n  }\n\n  logout(): Observable<any> {\n    const url = `${this.baseUrl}/logout`;\n    const headers = this.getAuthHeaders();\n    return this.http.post(url, null, { headers });\n  }\n\n\n  createComment(content: string, postid: number): Observable<any> {\n    const url = `${this.baseUrl}/createcomment`;\n    const body = { content, postid };\n    const headers = this.getAuthHeaders();\n    return this.http.post(url, body, { headers });\n  }\n\n\n\n  getComments(): Observable<any> {\n    const url = `${this.baseUrl}/getcomments`;\n    return this.http.get(url);\n  }\n\n  getCommentUserName(commentUsers: any[], userId: number): string {\n    const commentUser = commentUsers.find(user => user.id === userId);\n    return commentUser ? commentUser.name : 'Unknown';\n  }\n\n  getCommentUsers(commentIds: number[]): Observable<any> {\n    const url = `${this.baseUrl}/getcommentusers`;\n    return this.http.post(url, { commentIds }, { headers: this.httpHeaders });\n  }\n\n\n  createPost(data: any): Observable<any> {\n    const url = `${this.baseUrl}/createpost`;\n    const headers = this.getAuthHeaders().set('Content-Type', 'application/json');\n    return this.http.post(url, data, { headers });\n  }\n  \n\n\n  getPosts(): Observable<any> {\n    const url = `${this.baseUrl}/getposts`;\n    return this.http.get(url);\n  }\n\n  isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n\n  publicComment(content: string, postId: number | null): Observable<any> {\n    const url = `${this.baseUrl}/publicComment`;\n    const userId = 100;\n    const obj = { content, postId, userId };\n    const headers = this.getAuthHeaders();\n    return this.http.post(url, obj, { headers });\n  }\n\n  getcomments(): Observable<any> {\n    const url = `${this.baseUrl}/getcomments`;\n    return this.http.get(url);\n  }\n\n  getUserStats(userId: number): Observable<any> {\n    const url = `${this.baseUrl}/user/${userId}/stats`;\n    const headers = this.getAuthHeaders();\n    return this.http.get(url, { headers });\n  }\n\n  sendOTPByEmail(email: string): Observable<any> {\n    const url = `${this.baseUrl}/forgot-password`;\n    const data = { email };\n    return this.http.post(url, data, { headers: this.httpHeaders });\n  }\n\n  // API call for resetting the password\n  resetPassword(email: string, otp: string, newPassword: string): Observable<any> {\n    const url = `${this.baseUrl}/reset-password`;\n    const data = { email, otp, newPassword };\n    return this.http.post(url, data, { headers: this.httpHeaders });\n\n  }\n \n  sendFollowRequest(targetUserId: number, requesterId:number): Observable<any> {\n    const url = `${this.baseUrl}/follow-request`;\n    const data = { targetUserId, requesterId };\n    // console.log(data, 'apiservicedata')\n    const headers = this.getAuthHeaders();\n    return this.http.post(url, data, { headers: this.httpHeaders });\n  }\n  \n  getFollowRequestStatus(requesterId: number, targetId: number): Observable<any> {\n    const url = `${this.baseUrl}/follow-status`;\n    const params = { requesterId: String(requesterId), targetId: String(targetId) };\n    const headers = this.getAuthHeaders();\n    return this.http.get(url, { headers, params });\n  }\n  getfollowrequestuserdata(): Observable<any> {\n    const url = `${this.baseUrl}/follow-requestsdata`;\n    return this.http.get(url);\n  }\n\ngetFollowRequests(requesterId: any): Observable<any> {  \n  const url = `${this.baseUrl}/follow-requests/${requesterId}`;\n  return this.http.get(url);\n}\n\n\n  updateFollowRequestStatus(requestId: number, status: string): Observable<any> {\n    const url = `${this.baseUrl}/follow-requests-status/${requestId}`;\n    const data = { status };\n    const headers = this.getAuthHeaders();\n    return this.http.put(url, data, { headers });\n  }\n\n  getCombinedData(): Observable<any> {\n    const url = `${this.baseUrl}/combined-data`;\n    return this.http.get(url);\n  }\n\n  getPostHeaders(): Observable<any> {\n    const url = `${this.baseUrl}/post-headers`;\n    return this.http.get(url, { headers: this.getAuthHeaders() });\n  }\n  \n  checkTokenExpiration(): Observable<any> {\n    const url = `${this.baseUrl}/check-token-expiration`;\n    return this.http.get(url, { headers: this.getAuthHeaders() });\n  }\n  // refreshAccessToken(): Observable<any> {\n \n  //   return this.http.post<any>('http://localhost:4000/refresh-token', null, { headers: this.httpTokenHeaders });\n  // }\n \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { BasicComponent } from './basic/basic.component';\nimport { SupervisiorComponent } from './supervisior/supervisior.component';\nimport { UnauthorisedComponent } from './unauthorised/unauthorised.component';\nimport { CreatecommentComponent } from './createcomment/createcomment.component';\nimport { JourneyReportComponent } from './journey-report/journey-report.component';\nimport { PublicPageComponent } from './public-page/public-page.component';\n\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\nimport { HeaderDetailComponent } from './header-detail/header-detail.component';\nimport { PostComponent } from './post/post.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/posts', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'header', component: HeaderDetailComponent},\n  \n  { path: 'admin', component: AdminComponent },\n  { path: 'basic', component: BasicComponent },\n  { path: 'supervisior', component: SupervisiorComponent},\n  { path: 'unauthorisied', component: UnauthorisedComponent},\n  { path: 'comments/:postId', component: CreatecommentComponent},\n  {path: 'report', component:JourneyReportComponent},\n  {path: 'posts', component:PublicPageComponent},\n  {path: 'forgot-password', component:ForgotPasswordComponent},\n  \n  {path:'post/:id',component:PostComponent}\n  // { path: 'reset-password', component: ResetPasswordComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component } from '@angular/core';\nimport { ApiService } from './api.service';\n// import { SessionService } from './session.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  \n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  private sessionKey = 'myAppSession';\n  name: string;\n  email: string;\n  password: string;\n  roles: string;\n  selectedImage:any;\n  file: File;\n  \n\n  constructor(private apiService: ApiService,private router: Router){}\n  \n\nngOnInit() {}\n\n  onSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      password: this.password,\n      roles: this.roles,\n      file: this.file.name,\n    };\n\n    this.apiService.createUser(user).subscribe();\n  }\n  \n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { SupervisiorComponent } from './supervisior/supervisior.component';\nimport { BasicComponent } from './basic/basic.component';\nimport { ApiService } from './api.service';\nimport { UnauthorisedComponent } from './unauthorised/unauthorised.component';\nimport { CreatecommentComponent} from './createcomment/createcomment.component';\nimport { JourneyReportComponent } from './journey-report/journey-report.component';\nimport { PublicPageComponent } from './public-page/public-page.component';\nimport { DatePipe } from '@angular/common';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderDetailComponent } from './header-detail/header-detail.component'\nimport { PostComponent } from './post/post.component';\n\n\n// import { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    AdminComponent,\n    SupervisiorComponent,\n    BasicComponent,\n    UnauthorisedComponent,\n    CreatecommentComponent,\n    JourneyReportComponent,\n    PublicPageComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    HeaderDetailComponent,\n    PostComponent\n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    BrowserAnimationsModule,\n    AppRoutingModule   \n  ],\n  exports: [\n    \n    AdminComponent,\n  ],\n  providers: [ ApiService,DatePipe],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-basic',\n  templateUrl: './basic.component.html',\n  styleUrls: ['./basic.component.css']\n})\nexport class BasicComponent implements OnInit {\n  roles: string;\n  showPasswordResetForm: boolean = false;\n  oldPassword: string;\n  newPassword: string;\n  email:any;\n  user: unknown;\n\n\n  constructor(private router: Router, private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.roles =localStorage.getItem('role'); \n    if(!this.roles){\n      this.router.navigate(['/login']);\n    }\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.email = this.user['email'];\n\n  }\n\n  onResetPassword() {\n    this.showPasswordResetForm = true;\n  }\n\n  cancelResetPassword() {\n    this.showPasswordResetForm = false;\n    this.oldPassword = '';\n    this.newPassword = '';\n  }\n\n  onResetPasswordSubmit() {\n    this.apiService. resetP(this.email,this.oldPassword, this.newPassword).subscribe(\n      () => {\n      \n        this.showAlert('success', 'Password reset successfully');\n      \n        this.cancelResetPassword();\n      },\n      (error) => {\n        console.error(error);\n        this.showAlert('error', 'Failed to reset password');\n      }\n    );\n\n    \n  }\n  showAlert(type: string, message: string) {\n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n  logout(): void {\n    this.apiService.logout().subscribe(\n      (response) => {\n    \n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        localStorage.removeItem('user');\n        console.log('Logged out successfully');\n  \n    \n        const expirationTime = response.expirationTime;\n  \n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Logout failed:', error);\n      }\n    );\n  }\n}\n","<div class=\"dashboard\">\n    <h1>Welcome, Basic!</h1>\n    <p>This is the basic dashboard.</p>\n    <p>You have no rights to perform any action.</p>\n    <button class=\"btn logout-button red-button\" (click)=\"logout()\">Logout</button>\n    <button (click)=\"showPasswordResetForm = true\">Reset Password</button>\n\n    <div *ngIf=\"showPasswordResetForm\">\n      <h2>Password Reset</h2>\n      <form (submit)=\"onResetPasswordSubmit()\">\n        <label for=\"oldPassword\">Old Password:</label>\n        <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" [(ngModel)]=\"oldPassword\" required>\n  \n        <label for=\"newPassword\">New Password:</label>\n        <input type=\"password\" id=\"newPassword\" name=\"newPassword\" [(ngModel)]=\"newPassword\" required>\n  \n        <button type=\"submit\">Reset Password</button>\n        <button type=\"button\" (click)=\"cancelResetPassword()\">Cancel</button>\n      </form>\n    </div>\n\n\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-createcomment',\n  templateUrl: './createcomment.component.html',\n  styleUrls: ['./createcomment.component.css']\n})\nexport class CreatecommentComponent implements OnInit {\n  content: string;\n  postid: any;\n  userId: any;\n  user: any;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.postid = params['postid'];\n    });\n\n    const userItem = localStorage.getItem('user');\n    if (userItem) {\n      this.userId = JSON.parse(userItem).id;\n    }\n  }\n\n  submitComment() {\n    if (this.content) {\n      this.apiService.createComment(this.content, this.postid).subscribe(\n        response => {\n          console.log('Response:', response);\n          alert('Comment saved successfully');\n          this.router.navigate(['/posts']);\n        },\n        error => {\n          console.error('Error:', error);\n        }\n      );\n    } else {\n      console.log('Content is required.');\n    }\n  }\n}\n","<h2>Create Comment</h2>\n\n<div>\n  <label for=\"content\">Comment Content:</label>\n  <textarea id=\"content\" [(ngModel)]=\"content\"></textarea>\n</div>\n\n<button (click)=\"submitComment()\">Submit Comment</button>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  email: any;\n  otp: any;\n  newPassword: any;\n  \n\n  constructor(private apiService: ApiService, private router: Router,) { }\n\n  ngOnInit(): void {\n  }\n\n  sendOTP() {\n    document.getElementById('main_loader').style.display = \"block\";\n    \n    if (!this.email) {\n      alert('Please provide a valid email ID.');\n      document.getElementById('main_loader').style.display = \"none\"; // Stop the spinner\n      return;\n    }\n  \n    this.apiService.sendOTPByEmail(this.email).subscribe(\n      (response) => {\n        console.log('OTP sent successfully:', response);\n  \n        document.getElementById('main_loader').style.display = \"none\"; // Stop the spinner\n        document.getElementById('showMessage').style.display = \"block\";\n  \n        setTimeout(() => {\n          document.getElementById('showMessage').style.display = \"none\";\n        }, 3000);\n  \n        this.otp = this.otp;\n      },\n      (error) => {\n        console.error('Failed to send OTP:', error);\n        document.getElementById('main_loader').style.display = \"none\"; // Stop the spinner\n      }\n    );\n  }\n  \n\n  resetPassword() {\n\n    if (!this.email || !this.otp || !this.newPassword) {\n      alert('Please fill all the required fields');\n      return;\n    }\n    this.apiService.resetPassword(this.email, this.otp, this.newPassword).subscribe(\n      (response) => {\n        console.log('Password reset successful:', response);\n        alert('Password reset successful'); \n        this.email = '';\n        this.otp = ''; \n        this.newPassword = ''; \n      },\n      (error) => {\n        console.error('Failed to reset password:', error);\n      }\n    );\n  } \n}\n","<div id=\"main_loader\" style=\"display:none;\">\n  <div class=\"loader-wrapper\">\n      <div class=\"lds-roller\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n      </div>\n  </div>\n</div>\n\n\n\n<div class=\"login-page\">\n  <div class=\"form-container\">\n    <div class=\"ansh\" style=\"padding-top: 10px;\">\n      <label for=\"emailInput\"><h2>Forgot-password</h2></label>\n      \n  </div>\n\n    <div class=\"forgot-password-form\">\n      <input type=\"email\" [(ngModel)]=\"email\" id=\"emailInput\" placeholder=\"Enter your email\" style=\"margin-bottom: 20px;width: 100%\">\n      <label id=\"showMessage\" style=\"display: none;\">OTP sent successfully</label>\n      <button (click)=\"sendOTP()\">Send OTP</button>\n    </div>\n\n    <div class=\"forgot-password-form\">\n      <input type=\"text\" [(ngModel)]=\"otp\" placeholder=\"Enter OTP\" style=\"margin-top: 20px;width: 100%;border-radius: 4px;border: 1px solid #ccc;padding: 8px;\">\n      <input type=\"password\" [(ngModel)]=\"newPassword\" placeholder=\"Enter new password\" style=\"margin-top: 20px;margin-bottom: 20px;width: 100%\">\n      <button (click)=\"resetPassword()\">Reset Password</button>\n    </div>\n    \n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-header-detail',\n  templateUrl: './header-detail.component.html',\n  styleUrls: ['./header-detail.component.css']\n})\nexport class HeaderDetailComponent implements OnInit {\n  header: any;\n\n\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.header = params['header'];\n   \n    });\n  }\n}\n","<p>header-detail works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  users: any;\n  roles: any;\n \n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.apiService.getusers().subscribe(\n      (response) => {\n        this.roles = response.map((user: any) => user.roles);\n        console.log(this.roles);\n      },\n      (error) => {\n        console.error(error);\n      }\n      \n    );\n    \n  }\n}\n\n","<div class=\"container\">\n    <table id=\"\"class=\"table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Password</th>\n        <th>Roles</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users\">\n        <td>{{ user.id }}</td>\n        <td>{{ user.name }}</td>\n        <td>{{ user.email }}</td>\n        <td>{{ user.password }}</td>\n        <td>{{ user.roles }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-journey-report',\n  templateUrl: './journey-report.component.html',\n  styleUrls: ['./journey-report.component.css']\n})\nexport class JourneyReportComponent implements OnInit {\n  userId: number;\n  file: File;\n  content: string = '';\n  header: string = '';\n  selectedFile: File | null = null;\n  isUserValid: boolean = true; \n\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n    const userItem = localStorage.getItem('user');\n    if (userItem) {\n      this.userId = JSON.parse(userItem).id;\n    } else {\n      this.isUserValid = false; \n    }\n  }\n\n  createPost(): void {\n    if (!this.isUserValid) {\n      console.log('Invalid user');\n      \n      return;\n    }\n\n    let obj = {\n      'content': this.content,\n      'header': this.header,\n      'file': this.file.name,\n      'userId': this.userId\n    }\n\n    this.apiService.createPost(obj).subscribe(\n      (response) => {\n        console.log('Post created successfully', response);\n        alert('Post created successfully');\n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Error creating post', error);\n      }\n    );\n  }\n\n  onFileSelected(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.file = inputElement.files[0];\n      console.log('53535', this.file);\n    }\n  }\n}\n","<h1>Create Post</h1>\r\n<input type=\"text\" [(ngModel)]=\"header\" placeholder=\"Post Header\">\r\n<textarea [(ngModel)]=\"content\" placeholder=\"Post Content\"></textarea>\r\n<input type=\"file\" name=\"user_file\"(change)=\"onFileSelected($event)\">\r\n<button (click)=\"createPost()\">Create Post</button>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: any;\n  password: any;\n  showPasswordResetForm: boolean = false;\n  forgotPasswordForm: boolean = false;\n  otp: any;\n  newPassword: any;\n\n\n  constructor(private apiService: ApiService, private router: Router) {}\n\n  onLogin() {\n    this.apiService.login(this.email, this.password).subscribe(\n      (response) => {\n        const token = response.token;\n\n        if (token) {\n        localStorage .setItem('token', token);\n          this.redirectToDashboard();\n        } else {\n          console.error('Token not found in the response:', response);\n        }\n      },\n      (error) => {\n        console.error(error);\n      \n        this.showAlert('error', 'Invalid email or password');\n      }\n    );\n  }\n\n  \n\n  showAlert(type: string, message: string) {\n   \n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n\n  \n  redirectToDashboard() {\n \n    this.apiService.getUser().subscribe(\n      (response) => {\n        console.log('sjsjsjsjsj ', response)\n        const user = response.data;\n       \n      localStorage .setItem('user', JSON.stringify(user));\n        const roles = user.roles;\n        if (roles) {\n        localStorage.setItem('role', roles);\n        \n          this.redirectBasedOnRole(roles);\n\n        } else {\n          console.error('Role not found in the user details:', user);\n        }\n      },\n      (error) => {\n        console.error('Failed to fetch user:', error);\n        this.showAlert('error', 'Failed to fetch user details');\n      }\n    );\n  }\n  // onResetPassword() {\n  //   this.router.navigate(['/reset-password']);\n  // }\n  // onResetPasswordd() {\n  \n  //   this.apiService.resetPasswordd(this.email).subscribe(\n  //     (response) => {\n  //       this.showAlert('success', response.message);\n       \n  //     },\n  //     (error) => {\n  //       console.error('Password reset failed:', error);\n  //       this.showAlert('error', 'Failed to reset password');\n  //     }\n  //   );\n  // }\n\n  navigateToForgotPassword() {\n    this.router.navigate(['/forgot-password']);\n  }\n  \n\n  redirectBasedOnRole(role: string) {\n    if (role === 'admin') {\n      this.router.navigate(['/admin']);\n    } else if (role === 'basic') {\n      this.router.navigate(['/basic']);\n    } else if (role === 'supervisior') {\n      this.router.navigate(['/supervisior']);\n    } else {\n      console.error('Unrecognized role:', role);\n    }\n  }\n\n  ngOnInit(): void {\n  }\n \n  \n\n  \n}\n","<div class=\"login-page\">\n  <div class=\"forms-container\">\n\n<form class=\"login-form\" (ngSubmit)=\"onLogin()\">\n  <h2>Welcome to the login page</h2>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n  </div>\n\n  <button type=\"submit\" class=\"btn\">Login</button>\n  <a (click)=\"navigateToForgotPassword()\" style=\"padding-left: 53px;\">Forgot Password?</a>\n  \n</form>\n \n  </div>\n</div>","import { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  postId: number;\n  post: any;\n  postImageUrls:{ [postId: number]: SafeResourceUrl } = {};\n  isUserValid: any;\n  users: any;\n  imageUrl: SafeResourceUrl | null = null; \n  header: string | null = null;\n  userId: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private sanitizer: DomSanitizer \n  ) {}\n\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.postId = +params['id'];\n      this.fetchPostDetails();\n      this.fetchCommentsForPost(); \n    });\n  }\n\n  fetchPostDetails() {\n    this.apiService.getPosts().subscribe(\n      (posts) => {\n        this.post = posts.find((post: any) => post.id === this.postId);\n        if (this.post) {\n          const imageUrl = this.post.url; \n          this.imageUrl = this.sanitizer.bypassSecurityTrustResourceUrl(imageUrl);\n        }\n      },\n      (error) => {\n        console.error('Failed to fetch post details:', error);\n      }\n    );\n  }\n\n  fetchCommentsForPost() {\n    if (this.postId) { \n      this.apiService.getComments().subscribe(\n        (comments) => {\n          console.log('All comments:', comments); \n          this.post.comments = comments.filter((comment: any) => comment.postId === this.postId);\n          console.log('Filtered comments:', this.post.comments); \n        },\n        (error) => {\n          console.error('Failed to fetch comments:', error);\n        }\n      );\n    }\n  }\n}\n","<div *ngIf=\"post\" class=\"post\" style=\"border: 1px solid #ccc; padding: 20px; margin: 155px; margin-top: px;\">\n  <div class=\"post-header\">\n    <h3><a [routerLink]=\"['/post', post.id]\">{{ post.header }}</a></h3>\n    <p class=\"post-date\">postcreatedon: {{ post.created_date }}</p>\n  </div>\n\n  <div *ngIf=\"imageUrl\">\n    <img [src]=\"imageUrl\" alt=\"Image\">\n  </div>\n\n  <div class=\"post-content\" style=\"margin: 10px;\">\n    <p>{{ post.content }}</p>\n  </div>\n\n  <div class=\"comments-section\">\n    <h4>Comments</h4>\n    <div *ngFor=\"let comment of post.comments\" class=\"card mb-4\" style=\"background-color:#EEF0F2; border: 1px solid #ccc; padding: 20px; height: 15%;\">\n      <div class=\"card-body\">\n        <p>{{ comment.content }}</p>\n        <div class=\"d-flex justify-content-between\">\n          <div class=\"d-flex flex-row align-items-center\">\n            <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\" height=\"25\" />\n            <p class=\"small mb-0 ms-2\">{{ comment.name }}</p>\n          </div>\n          <div class=\"d-flex flex-row align-items-center\">\n            <p class=\"small text-muted mb-0\">votes?</p>\n            <i class=\"far fa-thumbs-up mx-2 fa-xs text-black\" style=\"margin-top: -0.16rem;\"></i>\n            <p class=\"small text-muted mb-0\">{{ comment.upvotes }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-public-page',\n  templateUrl: './public-page.component.html',\n  styleUrls: ['./public-page.component.css']\n})\n\nexport class PublicPageComponent implements OnInit {\n  posts: any[] = [];\n  postImageUrls: { [postId: number]: SafeResourceUrl } = {};\n  isUserValid = false;\n  userName: any;\n  userId: any;\n  postCount: any;\n  url:any;\n  commentCount: any;\n  file: File;\n  content: string = '';\n  header: string = '';\n  selectedFile: File | null = null;\n  users: any[] = [];\n  searchQuery: string = '';\n  searchText: string = ''; \n\n  originalKeyValuePairs: { key: string; value: string }[] = [];\n  filteredKeyValuePairs: { key: string; value: string }[] = [];\n\n  targetUserId: number;\n  requesterId: number;\n  btnId: any = '';\n  combineddatah: any[] = [];\n  elementRef: any;\n  postHeaders: string[] = [];\n  userid: any;\n  \n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private datePipe: DatePipe,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit(): void {\n    // this.checkTokenExpiration() \n\n    this.retrievePosts();\n    this.checkIfUserLoggedIn();\n    this.getUserStatsFromLocalStorage(this.userId);\n    this.getUsers();\n    this.combineddata();\n    this.createPost();\n    \n }\n\n  search(): void {\n    this.filteredKeyValuePairs = this.originalKeyValuePairs.filter(pair =>\n      pair.key.toLowerCase().includes(this.searchText.toLowerCase()) ||\n      pair.value.toLowerCase().includes(this.searchText.toLowerCase())\n    );\n  }\n \n  getUserImageUrl(): string {\n    if (this.isUserValid && this.users && this.users.length > 0) {\n      const loggedInUserId = this.userId;\n      const loggedInUser = this.users.find((user) => user.id === loggedInUserId);\n      if (loggedInUser) {\n        const imageUrl = loggedInUser.url || 'd.jpg.jpg';\n        \n        return 'http://localhost:4000/uploads/' + imageUrl;\n      }\n    }\n  }\n  \n  // combineddata(){\n  //   this.apiService.getCombinedData().subscribe(\n  //     (data) => {\n      \n  //       this.combineddatah = data.map((user) => {\n  //         return {\n  //           ...user,\n  //           followStatus: user.receivedFollows.length > 0 ? user.receivedFollows[0].status : null,\n          \n  //         };\n  //       });\n  //           console.log()\n  //       console.log('Combined Data:', this.combineddatah);\n  //     },\n  //     (error) => {\n  //       console.error('Error fetching combined data:', error);\n  //     }\n  //   );\n  // }\n\n  combineddata() {\n  this.apiService.getCombinedData().subscribe(\n    (data) => {\n      this.combineddatah = data.map((user) => {\n        return {\n          ...user,\n          followStatus: user.followRequest === 1 ? 'Received' : 'Not Received'\n        };\n      });\n      console.log('Combined Data:', this.combineddatah);\n    },\n    (error) => {\n      console.error('Error fetching combined data:', error);\n    }\n  );\n}\n\n\n  getButtonText(followStatus: string | null): string {\n \n    return followStatus === 'pending' ? 'Requested' : 'Follow' ;\n  }\n\n  isRequested(followStatus: string | null): boolean {\n    \n    return followStatus === 'pending';\n  }\n\n  checkIfUserLoggedIn() {\n    const userItem = localStorage.getItem('user');\n    if (userItem) {\n      const user = JSON.parse(userItem);\n      this.userId = user.id;\n      this.userName = user.name;\n      console.log(this.userName);\n\n      this.isUserValid = true;\n    } else {\n      this.isUserValid = false;\n    }\n  }\n\n  retrievePosts() {\n    this.apiService.getPosts().subscribe(\n      (posts) => {\n        this.posts = this.mapPosts(posts);\n        this.fetchCommentsForPosts();\n        console.log('Posts:', this.posts);\n      },\n      (error) => {\n        console.error('Failed to fetch posts:', error);\n      }\n    );\n  }\n\n  fetchCommentsForPosts() {\n    this.posts.forEach((post) => {\n      this.apiService.getComments().subscribe(\n        (comments) => {\n          post.comments = comments.filter((comment) => comment.postid === post.id);\n        },\n        (error) => {\n          console.error('Failed to fetch comments:', error);\n        }\n      );\n    });\n  }\n\n  formatDateTime(dateTime: string): string {\n    const date = new Date(dateTime);\n    const formattedDate = date.toDateString();\n    const formattedTime = date.toTimeString().slice(0, 8);\n    return `${formattedDate} ${formattedTime}`;\n  }\n\n  toggleCommentSection(postId: number) {\n    const post = this.posts.find((p) => p.id === postId);\n    if (post) {\n      post.showCommentSection = !post.showCommentSection;\n    }\n  }\n\n  // submitComment(postId: number) {\n  //   const post = this.posts.find((p) => p.id === postId);\n  //   if (post && post.commentContent) {\n  //     this.apiService.createComment(post.commentContent, postId).subscribe(\n  //       (response) => {\n  //         console.log('Response:', response);\n  //         // alert('Comment saved successfully');\n  //         post.showCommentSection = false;\n  //         post.commentContent = '';\n  //       },\n  //       (error) => {\n  //         console.error('Error:', error);\n  //       }\n  //     );\n  //   } else {\n  //     console.log('Content is required.');\n  //   }\n  // }\n  \n  submitComment(postId: number) {\n    const post = this.posts.find((p) => p.id === postId);\n    if (post && post.commentContent) {\n    \n      const token = localStorage.getItem('token');\n      if (!token) {\n      \n        window.location.reload();\n        return;\n      }\n  \n      this.apiService.createComment(post.commentContent, postId).subscribe(\n        (response) => {\n          console.log('Response:', response);\n  \n          post.comments.push(response);\n  \n          post.commentContent = '';\n  \n          post.showCommentSection = false;\n  \n          this.apiService.getComments().subscribe(\n            (comments) => {\n              post.comments = comments.filter((comment) => comment.postid === post.id);\n            },\n            (error) => {\n              console.error('Failed to fetch comments:', error);\n            }\n          );\n        },\n        (error) => {\n          console.error('Error:', error);\n        }\n      );\n    } else {\n      console.log('Content is required.');\n    }\n  }\n  \n  // checkTokenExpiration() {\n  //   this.apiService.checkTokenExpiration().subscribe(\n  //     (response) => {\n  //       if (response.expired) {\n  //         console.log('Token is expired');\n  //         this.router.navigate(['/login']);\n          \n  //       } else {\n  //         console.log('Token is valid');\n  //       }\n  //     },\n  //     (error) => {\n  //       console.error('Error checking token expiration:', error);\n  //       this.router.navigate(['/login']);\n  //     }\n  //   );\n  // }\n  \n\n\n  mapPosts(posts: any[]): any[] {\n    const sortedPosts = posts.sort((a, b) => {\n      return new Date(b.created_date).getTime() - new Date(a.created_date).getTime();\n    });\n\n    return sortedPosts.map((post) => {\n      const sanitizedUrl = post.url ? this.sanitizer.bypassSecurityTrustResourceUrl(post.url) : null;\n      this.postImageUrls[post.id] = sanitizedUrl;\n      return {\n        ...post,\n        showCommentSection: false,\n        commentContent: '',\n        comments: [],\n        created_date: this.formatDateTime(post.created_date),\n      };\n    });\n  }\n\n  getUserStatsFromLocalStorage(userId: number) {\n    userId = this.userId;\n    this.apiService.getUserStats(userId).subscribe(\n      (stats: any) => {\n        console.log('User stats:', stats);\n        this.postCount = stats.postCount;\n        this.commentCount = stats.commentCount;\n      },\n      (error: any) => {\n        console.error('Failed to fetch user statistics:', error);\n      }\n    );\n  }\n\n  getUsers() {\n    this.apiService.getusers().subscribe(\n      (users) => {\n        this.users = users;\n        console.log('Users:', this.users);\n      },\n      (error) => {\n        console.error('Failed to fetch users:', error);\n      }\n    );\n  }\n\n  \n//  logout(): void {\n//   this.apiService.logout().subscribe(\n//     (response) => {\n//       localStorage.removeItem('token');\n//       localStorage.removeItem('role');\n//       localStorage.removeItem('user');\n//       console.log('Logged out successfully');\n\n//       const expirationTime = response.expirationTime;\n//       console.log(`Token expired at: ${new Date(expirationTime)}`);\n\n//       // Check if the token is already expired\n//       const currentTime = Date.now();\n//       if (expirationTime && expirationTime < currentTime) {\n//         console.log('Token has already expired, redirecting to login');\n//         this.router.navigate(['/login']);\n//       } else {\n//         sessionStorage.clear();\n//         this.router.navigate(['/login']);\n//       }\n//     },\n//     (error) => {\n//       console.error('Logout failed:', error);\n//     }\n//   );\n// }\n\n  logout(): void {\n  this.apiService.logout().subscribe(\n    (response) => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('role');\n      localStorage.removeItem('user');\n      console.log('Logged out successfully');\n\n      const expirationTime = response.expirationTime;\n      console.log(`Token expired at: ${new Date(expirationTime)}`);\n\n    \n      const currentTime = Date.now();\n      if (expirationTime && expirationTime < currentTime) {\n        console.log('Token has already expired, redirecting to login');\n        this.router.navigate(['/login']);\n      } else {\n        sessionStorage.clear();\n        this.router.navigate(['/login']);\n      }\n    },\n    (error) => {\n      console.error('Logout failed:', error);\n    }\n  );\n  }\n\n  createPost(): void {\n    if (!this.isUserValid) {\n      console.log('Invalid user');\n      return;\n    }\n    \n\n    let obj = {\n      content: this.content,\n      header: this.header,\n      file: this.file.name,\n      // url:this.url,\n      userid: this.userId,\n    };\n\n    console.log('object ',obj);\n\n    \n\n    this.apiService.createPost(obj).subscribe(\n      (response) => {\n        console.log('Post created successfully', response);\n        alert('Post created successfully');\n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Error creating post', error);\n      }\n    );\n  }\n\n  onFileSelected(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.file = inputElement.files[0];\n      console.log('53535', this.file);\n    }\n  }\n\n  onClickButton(targetUserId: number) {\n    this.btnId =targetUserId;\n    const userDataString = localStorage.getItem('user');\n    const userData = JSON.parse(userDataString);\n    const requesterId = userData?.id;\n    if (!requesterId) {\n      console.error('Requester ID not found in localStorage.');\n      return;\n    }\n\n    this.apiService.sendFollowRequest(targetUserId, requesterId).subscribe(\n      (response) => {\n        console.log('Follow request sent successfully:', response);\n        if(response.status === 'pending'){\n          document.getElementById(this.btnId).innerText = 'Requested'; \n        }\n      },\n      (error) => {\n        console.error('Failed to send follow request:', error);\n      }\n    );\n  }\n\n  // getRequesterIdFromLocalStorage(): number | null {\n  //   const userDataString = localStorage.getItem('userData');\n  //   if (userDataString) {\n  //     try {\n  //       const userData = JSON.parse(userDataString);\n  //       return userData.id;\n  //     } catch (error) {\n  //       console.error('Error parsing localStorage data:', error);\n  //     }\n  //   }\n  //   return null;\n  // }\n\n  getFollowRequests() {\n    const userDataString = localStorage.getItem('user');\n    const userData = JSON.parse(userDataString);\n    const requesterId = userData?.id;\n    if (!requesterId) {\n      console.error('Requester ID not found in localStorage.');\n      return;\n    }\n  \n    this.apiService.getFollowRequests(requesterId).subscribe(\n      (response) => {\n        console.log('Follow requests:', response);\n      },\n      (error) => {\n        console.error('Failed to get follow requests:', error);\n      }\n    );\n  }\n  \n  updateFollowRequestStatus(requestId: number, status: string) {\n    this.apiService.updateFollowRequestStatus(requestId, status).subscribe(\n      (response) => {\n        console.log('Follow request status updated:', response);\n     \n      },\n      (error) => {\n        console.error('Failed to update follow request status:', error);\n      \n      }\n    );\n  }\n  \n}  \n\n \n  \n  \n\n \n\n","\n<nav class=\"navbar navbar-expand-lg bg-light fixed-top\" style=\"height: 50px;\" data-bs-theme=\"light\">\n  <div class=\"container-fluid\">\n\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor03\"\n      aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n      <!-- <input class=\"form-control me-sm-2\" type=\"search\" placeholder=\"Search\">\n      <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button> -->\n      <!-- <input type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\" placeholder=\"Search\">\n<div *ngIf=\"searchText\">\n  <ul>\n    <li *ngFor=\"let pair of filteredKeyValuePairs\"> -->\n      <!-- <a [routerLink]=\"['/details', pair.key]\"> -->\n        <!-- <strong>{{ pair.key }}:</strong> \n        {{ pair.value }} -->\n      <!-- </a> -->\n    <!-- </li>\n  </ul>\n</div> -->\n\n<input type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\" placeholder=\"Search\">\n<div *ngIf=\"searchText\" style=\"width: 250px; height: auto; position: fixed; top:45px; min-height: 100px; height: 100%; max-height: 300px; overflow-y: auto;\">\n  <ul class=\"search-results\" style=\"width: 100%;background-color: lavender;\">\n    <li *ngFor=\"let post of posts\" >\n      <a [routerLink]=\"['/post', post.id]\">{{ post.header }}</a>\n      <!-- <strong>{{ pair.key }}:</strong> {{ pair.value }}</a> -->\n    </li>\n  </ul>\n</div>\n\n\n\n    <div *ngIf=\"!isUserValid\">\n      <span class=\"navbar-icon\"><i class=\"fas fa-cog\"></i></span>&nbsp;\n      <span class=\"navbar-icon\"><i class=\"fas fa-bell\"></i></span> &nbsp;\n      <span class=\"navbar-icon\"><i class=\"fas fa-envelope\"></i></span> &nbsp;\n      <a routerLink=\"/login\">\n        Login &\n      </a>\n\n      <a routerLink=\"/register\">Register</a>\n\n    </div>\n\n    <div *ngIf=\"isUserValid\" class=\"d-flex align-items-center\">\n      <div class=\"hi\">\n        <p style=\"margin-bottom: 0;margin-right: 9px;\">Welcome, {{ userName }}</p>\n      </div>&nbsp;\n    \n      <div class=\"valid-user1 ml-auto\" style=\"margin-bottom: 21px;\">\n        <!-- <a [routerLink]=\"'/report'\" class=\"mr-3 button-link\">Create Post</a> -->\n        <button (click)=\"logout()\"style=\" background: transparent;border: 0;color: #558ed7;text-decoration: underline;padding: 0px;margin: 0px;margin-top: 20px;\">Logout</button>\n      </div>\n      \n    </div>\n    \n    \n  </div>\n  \n</nav>\n<div *ngIf=\"!isUserValid\">\n <div class=\"horizon\"> \n \n\n  <div class=\"pen\" style=\"background: white; width: 100%; margin-top:47px; padding-right: 10px;margin-left: 20px;\" >\n   <div *ngFor=\"let post of posts\" class=\"post\">\n    <div class=\"post-header\">\n      <h3><a [routerLink]=\"['/post', post.id]\">{{ post.header }}</a></h3>\n      <p class=\"post-date\">postcreatedon: {{ post.created_date }}</p>\n    </div>\n\n      <div class=\"post-content\">\n        <img *ngIf=\"postImageUrls[post.id]\" [src]=\"postImageUrls[post.id]\" alt=\"Post Image\">\n      </div>\n      <div class=\"post-content\">\n        <p>{{ post.content }}</p>\n      </div>\n\n      <div class=\"comments-section\">\n        <h4>Comments</h4>\n        <div *ngFor=\"let comment of post.comments\" class=\"card mb-4\" style=\" background-color:#EEF0F2;border: 1px solid #ccc;\n        padding: 20px;\n        /* margin-top: 46px; */\n        height: 15%;\">\n          <div class=\"card-body\">\n            <p>{{ comment.content }}</p>\n            <div class=\"d-flex justify-content-between\">\n              <div class=\"d-flex flex-row align-items-center\">\n                <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\"\n                  height=\"25\" />\n                <p class=\"small mb-0 ms-2\">{{ comment.name }}</p>\n              </div>\n\n          \n              <div class=\"d-flex flex-row align-items-center\">\n                <p class=\"small text-muted mb-0\">votes?</p>\n                <i class=\"far fa-thumbs-up mx-2 fa-xs text-black\" style=\"margin-top: -0.16rem;\"></i>\n                <p class=\"small text-muted mb-0\">{{ comment.upvotes }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button class=\"comment-button\" (click)=\"toggleCommentSection(post.id)\">Add Comment</button>\n      <div class=\"comment-section\" *ngIf=\"post.showCommentSection\">\n        \n        <div class=\"card shadow-0 border\" style=\"background-color: #f0f2f5;\">\n          <div class=\"card-body p-4\">\n            <div class=\"form-outline mb-4\">\n              <input type=\"text\" [(ngModel)]=\"post.commentContent\" id=\"addANote\" class=\"form-control\"\n                placeholder=\"Type comment...\" />\n              <label class=\"form-label\" for=\"addANote\">+ Add a note</label>\n            </div>\n            \n            <button class=\"submit-button\" (click)=\"submitComment(post.id)\">Submit Comment</button>\n          </div>\n        </div>\n      </div>\n\n      <hr>\n    </div>\n  </div>\n\n\n  <!-- <div class=\"horizonss\">\n    <div class=\"card-body\" style=\"border: 1px solid #ccc; height: 50%;; width: 100%; margin-top: 47px;\">\n      <div class=\"col-sm-6 col-lg-12\">\n        <div class=\"card\" style=\"margin: 19px;\">\n       \n          <div class=\"card-header pb-0 border-0\">\n            <h5 class=\"card-title mb-0\">Who to follow</h5>\n          </div>\n      \n\n          <div class=\"card-body\">\n         \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#!\"><img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/04.jpg\" alt=\"\"></a>\n              </div>\n           \n              <div class=\"overflow-hidden\">\n                <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                <p class=\"mb-0 small text-truncate\">Web Developer</p>\n              </div>\n           \n              <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n            </div>\n        \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n              </div>\n         \n                <div class=\"overflow-hidden\">\n                  <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                  <p class=\"mb-0 small text-truncate\">Web Developer</p>\n                </div>\n             \n                <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n              </div>\n              <div class=\"hstack gap-2 mb-3\">\n           \n                <div class=\"avatar\">\n                  <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n                </div>\n           \n                  <div class=\"overflow-hidden\">\n                    <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                    <p class=\"mb-0 small text-truncate\">Web Developer</p>\n                  </div>\n               \n                  <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n                </div>\n              <div class=\"hstack gap-2 mb-3\">\n             \n                <div class=\"avatar\">\n                  <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n                </div>\n           \n              <div class=\"overflow-hidden\">\n                <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                <p class=\"mb-0 small text-truncate\">Web Developer</p>\n              </div>\n           \n              <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n            </div>\n        \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n              </div>\n             \n              <div class=\"overflow-hidden\">\n                <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                <p class=\"mb-0 small text-truncate\">Web Developer</p>\n              </div>\n           \n              <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n            </div>\n        \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n              </div>\n         \n            <div class=\"d-grid mt-3\">\n              <a class=\"btn btn-sm btn-primary-soft\" href=\"#!\">View more</a>\n            </div>\n          </div>\n          \n         \n        </div>\n      </div>\n    </div>\n    </div>\n    </div> -->\n</div> \n</div>\n\n<div *ngIf=\"isUserValid\">\n<div class=\"horizon\" >\n  <div class=\"horizons\">\n    <div class=\"card overflow-hidden\" style=\"margin-right: 14px;margin-top: 45px;\">\n      <div class=\"card-body pt-0\">\n        <div class=\"text\">\n          <div class=\"change\">\n            <div class=\"text1\">\n              <div class=\"change1\" style=\"padding-left: 11px;\">\n                <!-- Display user's image from the currently logged-in user -->\n                <img class=\"rounded-circle\" height=\"50px\" weight=\"5px\" [src]=\"getUserImageUrl()\" alt=\"User Image\" />\n              </div>\n\n            </div>\n            <h5 class=\"mb-0\"> <a href=\"#!\"></a>{{userName}} </h5>\n            <small>Web Developer at Webestica</small>\n            <p class=\"mt-3\">I'd love to change the world, but they won’t give me the source code.</p>\n            <div class=\"hstack gap-2 gap-xl-3 justify-content-center\">\n              <div>\n                <h6 class=\"mb-0\">{{postCount}}</h6>\n                <small>Post</small>\n              </div>\n              <div class=\"vr\"></div>\n              <div>\n                <h6 class=\"mb-0\">{{commentCount}}</h6>\n                <small>Comments</small>\n              </div>\n            </div>\n          </div>\n          <hr>\n\n          <ul class=\"nav nav-link-secondary flex-column fw-bold gap-2\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-home\"></i>\n             Feed</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-network-wired\"></i>\n                Connections</a>\n            </li>\n\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"far fa-calendar-alt\"></i>\n                Events</a>\n            </li>\n\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-users\"></i>\n                Groups</a>\n\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-bell\"></i>\n                Notifications</a>\n                \n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-cog\"></i>\n                Settings</a>\n            </li>\n          </ul>\n\n        </div>\n\n        <div class=\"card-footer text-center py-2\">\n          <a class=\"btn btn-link btn-sm\" href=\"#!\">View Profile </a>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"ansh\">\n   \n  <div class=\"hello2\">\n      <div class=\"col\">\n        <div class=\"card8\" >\n      \n          <div class=\"card-body\">\n            <div class=\"text1\">\n              <div class=\"change1\" >\n                <h2>Create Post</h2>\n                <img height=\"50px\" weight=\"5px\" src=\"assets/pps.jpg\" alt=\"User Image\" style=\"margin-left: 10px;\" />\n              </div>\n          </div>\n          \n            <div class=\"form-group\">\n              <label for=\"postHeader\" style=\"color: #25292e;margin-left: 10px;\">Post Header</label>\n              <input type=\"text\" class=\"form-control\" id=\"postHeader\" [(ngModel)]=\"header\" placeholder=\"\"\n               style=\"border: 0;\n              background-color: #f8f9fa;width: 96%;margin-left: 11px;\">\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"postContent\" style=\"color: #25292e; margin-left: 10px;\">Post Content</label>\n              <textarea class=\"form-control\" id=\"postContent\" [(ngModel)]=\"content\" placeholder=\"\"\n                style=\"border: 0; background-color: #f8f9fa; width: 96%; margin-left: 11px; height: 100px;\"></textarea>\n            </div>\n            \n          \n            <div class=\"form-group d-flex\">\n              <div class=\"mr-2\">\n                <label for=\"postImage\" style=\"color: #11171d;margin-left: 10px;\"></label>\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" style=\"border: 0; background-color: #f8f9fa;margin-left: 11px;\"><i class=\"fas fa-file\"></i></span>\n                  </div>\n                  <div class=\"custom-file\">\n                    <input type=\"file\" class=\"custom-file-input\" id=\"postImage\" style=\"margin-right: -45px;\"    name=\"user_file\" (change)=\"onFileSelected($event)\">\n              \n                  </div>\n                </div>\n              </div>\n             \n              <ul class=\"nav nav-pills nav-stack small fw-normal\" style=\"margin-top: 24px;\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link bg-light py-1 px-2 mb-0\" href=\"#!\" style=\"margin-right:2px; margin-left: 86px;\" data-bs-toggle=\"modal\" data-bs-target=\"#feedActionPhoto\"> <i class=\"bi bi-image-fill text-success pe-2\"></i>Photo</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link bg-light py-1 px-2 mb-0\" href=\"#!\" style=\"margin-left: 4px;\" data-bs-toggle=\"modal\" data-bs-target=\"#feedActionVideo\"> <i class=\"bi bi-camera-reels-fill text-info pe-2\"></i>Video</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a href=\"#\" class=\"nav-link bg-light py-1 px-2 mb-0\"  style=\"margin-left: 4px;\" data-bs-toggle=\"modal\" data-bs-target=\"#modalCreateEvents\"> <i class=\"bi bi-calendar2-event-fill text-danger pe-2\"></i>Event </a>\n                </li>\n                <a class=\"nav-link bg-light py-1 px-2 mb-0\" href=\"#!\" style=\"margin-left: 4px;\" (click)=\"createPost()\">\n                  <i class=\"fas fa-plus-circle\" style=\"color: #ff0000;\"></i> Create Post\n                </a>\n              </ul>\n            </div>\n          </div>\n          </div>\n      </div>\n    </div>\n\n\n    \n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"col\">\n          <div class=\"content\">\n            <div *ngFor=\"let post of posts\" class=\"post\">\n              <div class=\"post-header\">\n                <h3>{{ post.header }}</h3>\n                <p class=\"post-date\">postcreatedon: {{ post.created_date }}</p>\n              </div>\n              <div class=\"post-content\">\n                <img *ngIf=\"postImageUrls[post.id]\" [src]=\"postImageUrls[post.id]\" alt=\"Post Image\">\n              </div>\n              <div class=\"post-content\">\n                <p>{{ post.content }}</p>\n              </div>\n\n              <div class=\"comments-section\">\n                <h4>Comments</h4>\n                <div *ngFor=\"let comment of post.comments\" class=\"card mb-4\" style=\" background-color:#EEF0F2;border: 1px solid #ccc;padding: 20px; /* margin-top: 46px; */height: 15%;\">\n                  <div class=\"card-body\">\n                    <p>{{ comment.content }}</p>\n                    <div class=\"d-flex justify-content-between\">\n                      <div class=\"d-flex flex-row align-items-center\">\n                        <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\"\n                          height=\"25\" />\n                        <p class=\"small mb-0 ms-2\">{{ comment.name }}</p>\n                      </div>\n                      <div class=\"d-flex flex-row align-items-center\">\n                        <p class=\"small text-muted mb-0\">votes?</p>\n                        <i class=\"far fa-thumbs-up mx-2 fa-xs text-black\" style=\"margin-top: -0.16rem;\"></i>\n                        <p class=\"small text-muted mb-0\">{{ comment.upvotes }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <button class=\"comment-button\" (click)=\"toggleCommentSection(post.id)\">Add Comment</button>\n              <div class=\"comment-section\" *ngIf=\"post.showCommentSection\">\n                \n                <div class=\"card shadow-0 border\" style=\"background-color: #f0f2f5;\">\n                  <div class=\"card-body p-4\">\n                    <div class=\"form-outline mb-4\">\n                      <input type=\"text\" [(ngModel)]=\"post.commentContent\" id=\"addANote\" class=\"form-control\"\n                        placeholder=\"Type comment...\" />\n                      <label class=\"form-label\" for=\"addANote\">+ Add a note</label>\n                    </div>\n                    <button class=\"submit-button\" (click)=\"submitComment(post.id)\">Submit Comment</button>\n                  </div>\n                </div>\n              </div>\n\n              <hr>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n    <div class=\"horizonss\">\n    <div class=\"card-body\" >\n      <div class=\"col-sm-6 col-lg-12\">\n        <div class=\"card\">\n       \n          <div class=\"card-header pb-0 border-0\">\n           \n            <img height=\"50px\" weight=\"5px\" src=\"assets/follow.jpg\" alt=\"User Image\" style=\"height: 61%;margin-left: 25px;width: 76%;\" />\n          \n          </div>\n      \n          <div class=\"card-bodye\">\n         \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#!\"><img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/04.jpg\" alt=\"\"></a>\n              </div>\n           \n              <!-- <div class=\"overflow-hidden\" *ngFor=\"let user of users;let i = index\">\n                <a class=\"h6 mb-0\" href=\"#!\">{{ user[0].name }}</a>\n                <button class=\"btn btn-primary ml-2\" id=\"followButton\" (click)=\"follow($event)\">Follow</button>\n              </div> -->\n\n              <div >\n\n              </div>\n\n              <!-- <div class=\"container\">\n                <ul class=\"company-list\">\n                  <div *ngFor=\"let item of combineddatah\"> -->\n                    <!-- <p #contentParagraph>{{ item.name }}</p> -->\n                    <!-- <button\n                      id=\"{{item.id}}\"\n                      class=\"btn btn-primary ml-2\"\n                      (click)=\"onClickButton(item.id)\"\n                      [disabled]=\"isRequested(item.followStatus)\">\n                      {{ getButtonText(item.followStatus) }}\n                    </button>\n                  </div>\n                </ul>\n              </div> -->\n              \n              \n           \n              <!-- <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\">\n                <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\"\n                height=\"25\" /></a> -->\n            </div>\n            <!-- <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\"\n            height=\"25\" />\n         -->\n          \n         \n        </div>\n      </div>\n    </div>\n    </div>\n    </div>\n\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  userForm: FormGroup;\n\n  constructor(private apiService: ApiService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.userForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]], \n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required,Validators.minLength(8),Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/)]],\n      user_file: [null, Validators.required],\n      roles: ['', Validators.required]\n    });\n\n    if (localStorage.getItem('role') === 'admin') {\n      window.location.href = './admin';\n    } else if (localStorage.getItem('role') === 'supervisior') {\n      window.location.href = './supervisior';\n    } else if (localStorage.getItem('role') === 'basic') {\n      window.location.href = './basic';\n    } else {\n      this.router.navigate(['/register']);\n    }\n  }\n\n  onSubmit() {\n    if (this.userForm.valid) {\n      const user = {\n        name: this.userForm.value.name,\n        email: this.userForm.value.email,\n        password: this.userForm.value.password,\n        roles: this.userForm.value.roles,\n        file: this.userForm.value.user_file.name,\n      };\n\n      this.apiService.createUser(user).subscribe(() => {\n        this.router.navigate(['/login']);\n      });\n    } else {\n      alert('Please fill all the fields');\n    }\n  }\n\n  onImageSelected(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.userForm.patchValue({\n        user_file: inputElement.files[0]\n      });\n    }\n    \n  }\n}\n","<div class=\"card\" style=\"margin-left: 34%;\">\n<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\" class=\"register-form\">\n  <h2 class=\"form-title\">Registration Form</h2>\n\n  <div class=\"form-group\">\n    <label for=\"name\" class=\"form-label\">Name:</label>\n    <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-input p-input\">\n    <div *ngIf=\"userForm.get('name').invalid && (userForm.get('name').dirty || userForm.get('name').touched)\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('name').errors?.required\">Name is required.</p>\n      <p *ngIf=\"userForm.get('name').errors?.pattern\">Name should only contain alphabets and spaces.</p>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"email\" class=\"form-label\">Email:</label>\n    <input type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-input p-input\">\n    <div *ngIf=\"userForm.get('email').invalid && (userForm.get('email').dirty || userForm.get('email').touched)\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('email').errors?.required\">Email is required.</p>\n      <p *ngIf=\"userForm.get('email').errors?.email\">Invalid email format.</p>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"password\" class=\"form-label\">Password:</label>\n    <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-input p-input\">\n    <div *ngIf=\"userForm.get('password').invalid && (userForm.get('password').dirty || userForm.get('password').touched)\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('password').errors?.required\">Password is required.</p>\n      <p *ngIf=\"userForm.get('password').errors?.minlength\">Password must be greater than 6 digits and contain at least 1 uppercase, 1 lowercase, 1 number, and 1 special character\"</p>\n    </div>\n  </div>\n\n  <div class=\"custom-file\">\n    <input type=\"file\" class=\"custom-file-input\" id=\"postImage\" formControlName=\"user_file\" (change)=\"onImageSelected($event)\">\n    <div *ngIf=\"userForm.get('user_file').invalid && userForm.get('user_file').touched\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('user_file').errors?.required\">File is required.</p>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"roles\" class=\"form-label\">Roles:</label>\n    <select id=\"roles\" formControlName=\"roles\" class=\"form-input p-input\">\n      <option value=\"\">Select a role</option>\n      <option value=\"admin\">Admin</option>\n      <option value=\"supervisor\">Supervisor</option>\n      <option value=\"user\">User</option>\n    </select>\n  </div>\n\n  <div>\n    <div *ngIf=\"userForm.get('roles').invalid && (userForm.get('roles').dirty || userForm.get('roles').touched)\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('roles').errors?.required\">Role is required.</p>\n    </div>\n  </div>\n\n  <div class=\"form-group button-group\">\n    <button type=\"submit\" class=\"form-button\">Register</button>\n  </div>\n  \n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n})\nexport class ResetPasswordComponent implements OnInit {\n  oldPassword: string;\n  newPassword: string;\n  email:any\n\n  constructor(private apiService: ApiService, private router: Router) {}\n\n  onResetPassword() {\n    this.apiService. resetP(this.email,this.oldPassword, this.newPassword).subscribe(\n      () => {\n       \n        this.showAlert('Password reset successfully','please login again');\n      \n        this.router.navigate(['/login']);\n      },\n      (error) => {\n        console.error(error);\n        this.showAlert('error', 'Failed to reset password');\n      }\n    );\n  }\n  \n\n  showAlert(type: string, message: string) {\n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","<div>\n    <h2>Reset Password</h2>\n    <form (ngSubmit)=\"onResetPassword()\">\n      <div>\n        <label for=\"oldPassword\">Old Password:</label>\n        <input type=\"password\" [(ngModel)]=\"oldPassword\" name=\"oldPassword\" required />\n      </div>\n      <div>\n        <label for=\"newPassword\">New Password:</label>\n        <input type=\"password\" [(ngModel)]=\"newPassword\" name=\"newPassword\" required />\n      </div>\n      <div>\n        <button type=\"submit\">Reset Password</button>\n      </div>\n    </form>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-supervisior',\n  templateUrl: './supervisior.component.html',\n  styleUrls: ['./supervisior.component.css']\n})\nexport class SupervisiorComponent implements OnInit {\n  roles: string;\n  users: any[];\n  showPasswordResetForm: boolean = false;\n  oldPassword: string;\n  newPassword: string;\n  email:any\n  user: unknown;\n\n  constructor(private router: Router,private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.roles = localStorage.getItem('role'); \n    if (this.roles !== 'admin' && this.roles !== 'supervisior') {\n     \n      this.router.navigate(['/login']);\n     \n    }\n    this.apiService.getusers().subscribe(\n      (response) => {\n        this.users = response; // \n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  \n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.email = this.user['email'];\n  }\n\n  performUpdate(id: number): void {\n    const user = this.users.find(u => u.id === id);\n    if (!user) return;\n  \n    user.isEditing = true; // Disable editing mode\n  \n    const userData = {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n      roles: user.roles\n    };\n  \n    this.apiService.updateUser(id, userData).subscribe(\n      (response) => {\n        console.log('User updated successfully');\n        // Handle any necessary UI updates or notifications\n      },\n      (error) => {\n        console.error('Failed to update user:', error);\n        // Handle the error response, display an error message, or perform any necessary error handling\n      }\n    );\n  }\n  \n  cancelUpdate(user: any): void {\n    user.isEditing = false; // Disable editing mode\n  }\n\n  onResetPassword() {\n    this.showPasswordResetForm = true;\n  }\n\n  cancelResetPassword() {\n    this.showPasswordResetForm = false;\n    this.oldPassword = '';\n    this.newPassword = '';\n  }\n\n  onResetPasswordSubmit() {\n    this.apiService. resetP(this.email,this.oldPassword, this.newPassword).subscribe(\n      () => {\n        \n        this.showAlert('success', 'Password reset successfully');\n       \n        this.cancelResetPassword();\n      },\n      (error) => {\n        console.error(error);\n        this.showAlert('error', 'Failed to reset password');\n      }\n    );\n  }\n\n  showAlert(type: string, message: string) {\n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n\n  logout(): void {\n    this.apiService.logout().subscribe(\n      (response) => {\n      \n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        localStorage.removeItem('user');\n        console.log('Logged out successfully');\n  \n        const expirationTime = response.expirationTime;\n  \n    \n        sessionStorage.clear();\n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Logout failed:', error);\n      }\n    );\n  }\n  \n  \n}\n","<div class=\"supervisior-dashboard\">\n    <h1 class=\"supervisior-title\">Welcome, Supervisior!</h1>\n    <p class=\"supervisior-description\">This is the supervisior dashboard.</p>\n    <button class=\"btn logout-button red-button\" (click)=\"logout()\">Logout</button>\n    <button (click)=\"showPasswordResetForm = true\">Reset Password</button>\n\n    <div *ngIf=\"showPasswordResetForm\">\n      <h2>Password Reset</h2>\n      <form (submit)=\"onResetPasswordSubmit()\">\n        <label for=\"oldPassword\">Old Password:</label>\n        <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" [(ngModel)]=\"oldPassword\" required>\n  \n        <label for=\"newPassword\">New Password:</label>\n        <input type=\"password\" id=\"newPassword\" name=\"newPassword\" [(ngModel)]=\"newPassword\" required>\n  \n        <button type=\"submit\">Reset Password</button>\n        <button type=\"button\" (click)=\"cancelResetPassword()\">Cancel</button>\n      </form>\n    </div>\n  \n\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Roles</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-container *ngFor=\"let user of users\">\n          <tr>\n            <td>{{ user.id }}</td>\n            <td>{{ user.name }}</td>\n            <td>{{ user.email }}</td>\n            <td>{{ user.roles }}</td>\n            <td>\n              <button class=\"update-button\" (click)=\"performUpdate(user.id)\">Update</button>\n            </td>\n          </tr>\n          <tr *ngIf=\"user.isEditing\">\n            <td colspan=\"5\">\n              <form (submit)=\"performUpdate(user.id)\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"user.name\" required>\n                \n                <label for=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"user.email\" required>\n                \n                <label for=\"password\">Password:</label>\n                <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"user.password\" required>\n                \n                <label for=\"roles\">Roles:</label>\n                <input type=\"text\" id=\"roles\" name=\"roles\" [(ngModel)]=\"user.roles\" required>\n                \n                <button type=\"submit\" class=\"update-submit-button\">Update</button>\n                <button class=\"update-cancel-button\" (click)=\"cancelUpdate(user)\">Cancel</button>\n              </form>\n            </td>\n          </tr>\n        </ng-container>\n      </tbody>\n    </table>\n  </div>\n  <div *ngIf=\"roles !== 'supervisior' && roles !== 'basic'\" class=\"unauthorized-access\">\n    <h1>Unauthorized Access</h1>\n    <p>Sorry, you do not have access to this page.</p>\n  </div>\n  \n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unauthorised',\n  templateUrl: './unauthorised.component.html',\n  styleUrls: ['./unauthorised.component.css']\n})\nexport class UnauthorisedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Oops!!Unauthorized Access</h1>\n<p>Sorry, you do not have access to this page.</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}