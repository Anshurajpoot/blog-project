{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/basic/basic.component.ts","webpack:///src/app/basic/basic.component.html","webpack:///src/app/createcomment/createcomment.component.ts","webpack:///src/app/createcomment/createcomment.component.html","webpack:///src/app/forgot-password/forgot-password.component.ts","webpack:///src/app/forgot-password/forgot-password.component.html","webpack:///src/app/header-detail/header-detail.component.ts","webpack:///src/app/header-detail/header-detail.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/journey-report/journey-report.component.ts","webpack:///src/app/journey-report/journey-report.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/public-page/public-page.component.ts","webpack:///src/app/public-page/public-page.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/reset-password/reset-password.component.ts","webpack:///src/app/reset-password/reset-password.component.html","webpack:///src/app/supervisior/supervisior.component.ts","webpack:///src/app/supervisior/supervisior.component.html","webpack:///src/app/unauthorised/unauthorised.component.ts","webpack:///src/app/unauthorised/unauthorised.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","router","apiService","showPasswordResetForm","roles","localStorage","getItem","navigate","alert","getusers","subscribe","response","users","error","console","user","JSON","parse","email","deleteUser","log","find","u","isEditing","userData","name","password","updateUser","oldPassword","newPassword","resetP","showAlert","cancelResetPassword","type","message","warn","logout","removeItem","expirationTime","Date","sessionStorage","clear","selector","templateUrl","styleUrls","ApiService","http","baseUrl","httpHeaders","set","token","httpTokenHeaders","postId","data","url","headers","getAuthHeaders","post","resetData","Authorization","get","put","content","postid","body","commentUsers","userId","commentUser","commentIds","obj","otp","targetUserId","requesterId","targetId","params","String","requestId","status","providedIn","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","sessionKey","file","createUser","AppModule","declarations","providers","bootstrap","BasicComponent","CreatecommentComponent","route","userItem","createComment","submitComment","ForgotPasswordComponent","document","getElementById","style","display","sendOTPByEmail","setTimeout","resetPassword","sendOTP","HeaderDetailComponent","header","HomeComponent","map","JourneyReportComponent","selectedFile","isUserValid","createPost","event","inputElement","target","files","length","onFileSelected","LoginComponent","forgotPasswordForm","login","setItem","redirectToDashboard","getUser","stringify","redirectBasedOnRole","role","onLogin","navigateToForgotPassword","PostComponent","sanitizer","postImageUrls","imageUrl","fetchPostDetails","fetchCommentsForPost","getPosts","posts","bypassSecurityTrustResourceUrl","getComments","comments","filter","comment","PublicPageComponent","datePipe","searchQuery","searchText","originalKeyValuePairs","filteredKeyValuePairs","btnId","combineddatah","postHeaders","retrievePosts","checkIfUserLoggedIn","getUserStatsFromLocalStorage","getUsers","combineddata","pair","key","toLowerCase","includes","value","loggedInUserId","loggedInUser","getCombinedData","followStatus","followRequest","userName","mapPosts","fetchCommentsForPosts","forEach","dateTime","date","formattedDate","toDateString","formattedTime","toTimeString","slice","p","showCommentSection","commentContent","window","location","reload","push","sortedPosts","sort","a","b","created_date","getTime","sanitizedUrl","formatDateTime","getUserStats","stats","postCount","commentCount","currentTime","now","userid","userDataString","sendFollowRequest","innerText","getFollowRequests","updateFollowRequestStatus","search","RegisterComponent","formBuilder","userForm","group","required","pattern","minLength","user_file","href","valid","patchValue","onSubmit","onImageSelected","ResetPasswordComponent","onResetPassword","SupervisiorComponent","UnauthorisedComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  roles: string;\n  users: any[];\n  showPasswordResetForm: boolean = false;\n  oldPassword: string;\n  newPassword: string;\n  email:string;\n  user: unknown;\n\n  constructor(private router: Router, private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.roles = localStorage.getItem('role'); \n  \n    if (!this.roles) {\n      this.router.navigate(['/login']);\n      return; \n    }\n  \n    if (this.roles !== 'admin') {\n      alert('Checking credentials admin');\n      this.router.navigate(['/unauthorisied']);\n      return; \n    }\n  \n    this.apiService.getusers().subscribe(\n      (response) => {\n        this.users = response;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.email = this.user['email'];\n  }\n  \n\n  performDelete(id: number): void {\n    this.apiService.deleteUser(id).subscribe(\n      () => {\n        console.log('User deleted successfully');\n      },\n      (error) => {\n        console.error('Failed to delete user:', error);\n      }\n    );\n  }\n\n  performUpdate(id: number): void {\n    const user = this.users.find(u => u.id === id);\n    if (!user) return;\n  \n    user.isEditing = true; // Enable editing mode\n  \n    const userData = {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n      roles: user.roles\n    };\n  \n    this.apiService.updateUser(id, userData).subscribe(\n      (response) => {\n        console.log('User updated successfully');\n        \n      },\n      (error) => {\n        console.error('Failed to update user:', error);\n     \n      }\n    );\n  }\n  \n  cancelUpdate(user: any): void {\n    user.isEditing = false; // Disable editing mode\n  }\n\n  onResetPassword() {\n    this.showPasswordResetForm = true;\n  }\n\n  cancelResetPassword() {\n    this.showPasswordResetForm = false;\n    this.oldPassword = '';\n    this.newPassword = '';\n  }\n\n  onResetPasswordSubmit() {\n    this.apiService. resetP(this.email,this.oldPassword, this.newPassword).subscribe(\n      () => {\n       \n        this.showAlert('success', 'Password reset successfully');\n     \n        this.cancelResetPassword();\n      },\n      (error) => {\n        console.error(error);\n        this.showAlert('error', 'Failed to reset password');\n      }\n    );\n  }\n\n  showAlert(type: string, message: string) {\n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n\n  logout(): void {\n    this.apiService.logout().subscribe(\n      (response) => {\n        // Clear the token, role, and user from local storage\n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        localStorage.removeItem('user');\n        console.log('Logged out successfully');\n  \n        // Get the expiration time from the response\n        const expirationTime = response.expirationTime;\n  \n        // Use the expiration time if needed\n        console.log(`Token expired at: ${new Date(expirationTime)}`);\n  \n        sessionStorage.clear();\n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Logout failed:', error);\n      }\n    );\n  }\n}\n","<div *ngIf=\"roles === 'admin'\">\n  <h1>Welcome, Admin!</h1>\n  <p>This is the admin dashboard.</p>\n  <!-- <button class=\"btn logout-button red-button\" (click)=\"logout()\">Logout</button> -->\n  <button (click)=\"logout()\">Logout</button>\n  <button (click)=\"showPasswordResetForm = true\">Reset Password</button>\n\n  <div *ngIf=\"showPasswordResetForm\">\n    <h2>Password Reset</h2>\n    <form (submit)=\"onResetPasswordSubmit()\">\n      <label for=\"oldPassword\">Old Password:</label>\n      <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" [(ngModel)]=\"oldPassword\" required>\n\n      <label for=\"newPassword\">New Password:</label>\n      <input type=\"password\" id=\"newPassword\" name=\"newPassword\" [(ngModel)]=\"newPassword\" required>\n\n      <button type=\"submit\">Reset Password</button>\n      <button type=\"button\" (click)=\"cancelResetPassword()\">Cancel</button>\n    </form>\n  </div>\n\n  <table>\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Roles</th>\n      </tr>\n    </thead>\n    <tbody>\n      <ng-container *ngFor=\"let user of users\">\n        <tr>\n          <td>{{ user.id }}</td>\n          <td>{{ user.name }}</td>\n          <td>{{ user.email }}</td>\n          <td>\n            <button (click)=\"performDelete(user.id)\">Delete</button>\n            <button (click)=\"performUpdate(user.id)\">Update</button>\n          </td>\n        </tr>\n        <tr *ngIf=\"user.isEditing\">\n          <td colspan=\"4\">\n            <form (submit)=\"performUpdate(user.id)\">\n              <label for=\"name\">Name:</label>\n              <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"user.name\" required>\n              \n              <label for=\"email\">Email:</label>\n              <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"user.email\" required>\n              \n              <label for=\"password\">Password:</label>\n              <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"user.password\" required>\n              \n              <label for=\"roles\">Actions:</label>\n              <input type=\"text\" id=\"roles\" name=\"roles\" [(ngModel)]=\"user.roles\" required>\n              \n\n           \n\n              <button type=\"submit\">Update</button>\n              <button (click)=\"cancelUpdate(user)\">Cancel</button>\n            </form>\n          </td>\n        </tr>\n      </ng-container>\n    </tbody>\n  </table>\n\n  \n</div>\n\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { id } from 'date-fns/locale';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  fetchCommentsForPosts(postId: number) {\n    throw new Error('Method not implemented.');\n  }\n  private baseUrl = 'http://localhost:4000'; \n  httpHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n\n  token = localStorage.getItem('token');\n  \n  httpTokenHeaders = new HttpHeaders().set('Authorization', `Bearer ${this.token}`)\n\n\n  constructor(private http: HttpClient) { }\n\n  // createUser(role: any): Observable<any> {\n  //   const url = `${this.baseUrl}/createusers`;\n  //   return this.http.post(url, role, { headers: this.httpHeaders });\n  // }\n  createUser(data: any): Observable<any> {\n    const url = `${this.baseUrl}/createusers`;\n    const headers = this.getAuthHeaders().set('Content-Type', 'application/json');\n    return this.http.post(url, data, { headers });\n   \n  }\n  // resetPasswordd(userId: string) {\n  //   return this.http.post<any>(`${this.baseUrl}/forget-password`, { userId });\n  // }\n  \n  resetP(email:string,oldPassword: string, newPassword: string) {\n    const resetData = { email,oldPassword, newPassword };\n    const token = localStorage.getItem('token');\n    const headers = { Authorization: `Bearer ${token}` };\n  \n    return this.http.post<any>('http://localhost:4000/reset-passwordd', resetData, { headers });\n  }\n  \n  \n  getusers(): Observable<any> {\n    const url = `${this.baseUrl}/getusers`;\n    return this.http.get(url);\n  }\n\n  login(email: string, password: string): Observable<any> {\n    const url = `${this.baseUrl}/login`;\n    return this.http.post(url, { email, password });\n  }\n\n  deleteUser(id: number): Observable<any> {\n    const url = `${this.baseUrl}/deleteUsers/${id}`;\n    const headers = this.getAuthHeaders();\n    return this.http.delete(url, { headers });\n  }\n\n  updateUser(id: number, userData: any): Observable<any> {\n    const url = `${this.baseUrl}/updateUsers/${id}`;\n    const headers = this.getAuthHeaders();\n    return this.http.put(url, userData, { headers });\n  }\n\n  getUser(): Observable<any> {\n    const url = `${this.baseUrl}/getuser`;\n    const headers = this.getAuthHeaders();\n    return this.http.get(url, { headers });\n  }\n\n  updateUserss( id:number,name: string,): Observable<any> {\n    const url = `${this.baseUrl}/updateUser`;\n    const data = { id: id, name: name }; \n    return this.http.put(url, data);\n  }\n\n  public getAuthHeaders(): HttpHeaders {\n    const token = localStorage.getItem('token');\n    const headers = this.httpHeaders;\n    if (token) {\n      return headers.set('Authorization', `Bearer ${token}`);\n    }\n    return headers;\n  }\n\n  logout(): Observable<any> {\n    const url = `${this.baseUrl}/logout`;\n    const headers = this.getAuthHeaders();\n    return this.http.post(url, null, { headers });\n  }\n\n\n  createComment(content: string, postid: number): Observable<any> {\n    const url = `${this.baseUrl}/createcomment`;\n    const body = { content, postid };\n    const headers = this.getAuthHeaders();\n    return this.http.post(url, body, { headers });\n  }\n\n\n\n  getComments(): Observable<any> {\n    const url = `${this.baseUrl}/getcomments`;\n    return this.http.get(url);\n  }\n\n  getCommentUserName(commentUsers: any[], userId: number): string {\n    const commentUser = commentUsers.find(user => user.id === userId);\n    return commentUser ? commentUser.name : 'Unknown';\n  }\n\n  getCommentUsers(commentIds: number[]): Observable<any> {\n    const url = `${this.baseUrl}/getcommentusers`;\n    return this.http.post(url, { commentIds }, { headers: this.httpHeaders });\n  }\n\n\n  createPost(data: any): Observable<any> {\n    const url = `${this.baseUrl}/createpost`;\n    const headers = this.getAuthHeaders().set('Content-Type', 'application/json');\n    return this.http.post(url, data, { headers });\n  }\n  \n\n\n  getPosts(): Observable<any> {\n    const url = `${this.baseUrl}/getposts`;\n    return this.http.get(url);\n  }\n\n  isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n\n  publicComment(content: string, postId: number | null): Observable<any> {\n    const url = `${this.baseUrl}/publicComment`;\n    const userId = 100;\n    const obj = { content, postId, userId };\n    const headers = this.getAuthHeaders();\n    return this.http.post(url, obj, { headers });\n  }\n\n  getcomments(): Observable<any> {\n    const url = `${this.baseUrl}/getcomments`;\n    return this.http.get(url);\n  }\n\n  getUserStats(userId: number): Observable<any> {\n    const url = `${this.baseUrl}/user/${userId}/stats`;\n    const headers = this.getAuthHeaders();\n    return this.http.get(url, { headers });\n  }\n\n  sendOTPByEmail(email: string): Observable<any> {\n    const url = `${this.baseUrl}/forgot-password`;\n    const data = { email };\n    return this.http.post(url, data, { headers: this.httpHeaders });\n  }\n\n  // API call for resetting the password\n  resetPassword(email: string, otp: string, newPassword: string): Observable<any> {\n    const url = `${this.baseUrl}/reset-password`;\n    const data = { email, otp, newPassword };\n    return this.http.post(url, data, { headers: this.httpHeaders });\n\n  }\n \n  sendFollowRequest(targetUserId: number, requesterId:number): Observable<any> {\n    const url = `${this.baseUrl}/follow-request`;\n    const data = { targetUserId, requesterId };\n    // console.log(data, 'apiservicedata')\n    const headers = this.getAuthHeaders();\n    return this.http.post(url, data, { headers: this.httpHeaders });\n  }\n  \n  getFollowRequestStatus(requesterId: number, targetId: number): Observable<any> {\n    const url = `${this.baseUrl}/follow-status`;\n    const params = { requesterId: String(requesterId), targetId: String(targetId) };\n    const headers = this.getAuthHeaders();\n    return this.http.get(url, { headers, params });\n  }\n  getfollowrequestuserdata(): Observable<any> {\n    const url = `${this.baseUrl}/follow-requestsdata`;\n    return this.http.get(url);\n  }\n\ngetFollowRequests(requesterId: any): Observable<any> {  \n  const url = `${this.baseUrl}/follow-requests/${requesterId}`;\n  return this.http.get(url);\n}\n\n\n  updateFollowRequestStatus(requestId: number, status: string): Observable<any> {\n    const url = `${this.baseUrl}/follow-requests-status/${requestId}`;\n    const data = { status };\n    const headers = this.getAuthHeaders();\n    return this.http.put(url, data, { headers });\n  }\n\n  getCombinedData(): Observable<any> {\n    const url = `${this.baseUrl}/combined-data`;\n    return this.http.get(url);\n  }\n\n  getPostHeaders(): Observable<any> {\n    const url = `${this.baseUrl}/post-headers`;\n    return this.http.get(url, { headers: this.getAuthHeaders() });\n  }\n  \n  checkTokenExpiration(): Observable<any> {\n    const url = `${this.baseUrl}/check-token-expiration`;\n    return this.http.get(url, { headers: this.getAuthHeaders() });\n  }\n  // refreshAccessToken(): Observable<any> {\n \n  //   return this.http.post<any>('http://localhost:4000/refresh-token', null, { headers: this.httpTokenHeaders });\n  // }\n \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { BasicComponent } from './basic/basic.component';\nimport { SupervisiorComponent } from './supervisior/supervisior.component';\nimport { UnauthorisedComponent } from './unauthorised/unauthorised.component';\nimport { CreatecommentComponent } from './createcomment/createcomment.component';\nimport { JourneyReportComponent } from './journey-report/journey-report.component';\nimport { PublicPageComponent } from './public-page/public-page.component';\n\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\nimport { HeaderDetailComponent } from './header-detail/header-detail.component';\nimport { PostComponent } from './post/post.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/posts', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'header', component: HeaderDetailComponent},\n  \n  { path: 'admin', component: AdminComponent },\n  { path: 'basic', component: BasicComponent },\n  { path: 'supervisior', component: SupervisiorComponent},\n  { path: 'unauthorisied', component: UnauthorisedComponent},\n  { path: 'comments/:postId', component: CreatecommentComponent},\n  {path: 'report', component:JourneyReportComponent},\n  {path: 'posts', component:PublicPageComponent},\n  {path: 'forgot-password', component:ForgotPasswordComponent},\n  \n  {path:'post/:id',component:PostComponent}\n  // { path: 'reset-password', component: ResetPasswordComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component } from '@angular/core';\nimport { ApiService } from './api.service';\n// import { SessionService } from './session.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  \n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  private sessionKey = 'myAppSession';\n  name: string;\n  email: string;\n  password: string;\n  roles: string;\n  selectedImage:any;\n  file: File;\n  \n\n  constructor(private apiService: ApiService,private router: Router){}\n  \n\nngOnInit() {}\n\n  onSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      password: this.password,\n      roles: this.roles,\n      file: this.file.name,\n    };\n\n    this.apiService.createUser(user).subscribe();\n  }\n  \n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { SupervisiorComponent } from './supervisior/supervisior.component';\nimport { BasicComponent } from './basic/basic.component';\nimport { ApiService } from './api.service';\nimport { UnauthorisedComponent } from './unauthorised/unauthorised.component';\nimport { CreatecommentComponent} from './createcomment/createcomment.component';\nimport { JourneyReportComponent } from './journey-report/journey-report.component';\nimport { PublicPageComponent } from './public-page/public-page.component';\nimport { DatePipe } from '@angular/common';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderDetailComponent } from './header-detail/header-detail.component'\nimport { PostComponent } from './post/post.component';\n\n\n// import { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    AdminComponent,\n    SupervisiorComponent,\n    BasicComponent,\n    UnauthorisedComponent,\n    CreatecommentComponent,\n    JourneyReportComponent,\n    PublicPageComponent,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    HeaderDetailComponent,\n    PostComponent\n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    BrowserAnimationsModule,\n    AppRoutingModule   \n  ],\n  exports: [\n    \n    AdminComponent,\n  ],\n  providers: [ ApiService,DatePipe],\n  bootstrap: [AppComponent],\n  \n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-basic',\n  templateUrl: './basic.component.html',\n  styleUrls: ['./basic.component.css']\n})\nexport class BasicComponent implements OnInit {\n  roles: string;\n  showPasswordResetForm: boolean = false;\n  oldPassword: string;\n  newPassword: string;\n  email:any;\n  user: unknown;\n\n\n  constructor(private router: Router, private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.roles =localStorage.getItem('role'); \n    if(!this.roles){\n      this.router.navigate(['/login']);\n    }\n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.email = this.user['email'];\n\n  }\n\n  onResetPassword() {\n    this.showPasswordResetForm = true;\n  }\n\n  cancelResetPassword() {\n    this.showPasswordResetForm = false;\n    this.oldPassword = '';\n    this.newPassword = '';\n  }\n\n  onResetPasswordSubmit() {\n    this.apiService. resetP(this.email,this.oldPassword, this.newPassword).subscribe(\n      () => {\n      \n        this.showAlert('success', 'Password reset successfully');\n      \n        this.cancelResetPassword();\n      },\n      (error) => {\n        console.error(error);\n        this.showAlert('error', 'Failed to reset password');\n      }\n    );\n\n    \n  }\n  showAlert(type: string, message: string) {\n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n  logout(): void {\n    this.apiService.logout().subscribe(\n      (response) => {\n    \n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        localStorage.removeItem('user');\n        console.log('Logged out successfully');\n  \n    \n        const expirationTime = response.expirationTime;\n  \n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Logout failed:', error);\n      }\n    );\n  }\n}\n","<div class=\"dashboard\">\n    <h1>Welcome, Basic!</h1>\n    <p>This is the basic dashboard.</p>\n    <p>You have no rights to perform any action.</p>\n    <button class=\"btn logout-button red-button\" (click)=\"logout()\">Logout</button>\n    <button (click)=\"showPasswordResetForm = true\">Reset Password</button>\n\n    <div *ngIf=\"showPasswordResetForm\">\n      <h2>Password Reset</h2>\n      <form (submit)=\"onResetPasswordSubmit()\">\n        <label for=\"oldPassword\">Old Password:</label>\n        <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" [(ngModel)]=\"oldPassword\" required>\n  \n        <label for=\"newPassword\">New Password:</label>\n        <input type=\"password\" id=\"newPassword\" name=\"newPassword\" [(ngModel)]=\"newPassword\" required>\n  \n        <button type=\"submit\">Reset Password</button>\n        <button type=\"button\" (click)=\"cancelResetPassword()\">Cancel</button>\n      </form>\n    </div>\n\n\n  </div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-createcomment',\n  templateUrl: './createcomment.component.html',\n  styleUrls: ['./createcomment.component.css']\n})\nexport class CreatecommentComponent implements OnInit {\n  content: string;\n  postid: any;\n  userId: any;\n  user: any;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.postid = params['postid'];\n    });\n\n    const userItem = localStorage.getItem('user');\n    if (userItem) {\n      this.userId = JSON.parse(userItem).id;\n    }\n  }\n\n  submitComment() {\n    if (this.content) {\n      this.apiService.createComment(this.content, this.postid).subscribe(\n        response => {\n          console.log('Response:', response);\n          alert('Comment saved successfully');\n          this.router.navigate(['/posts']);\n        },\n        error => {\n          console.error('Error:', error);\n        }\n      );\n    } else {\n      console.log('Content is required.');\n    }\n  }\n}\n","<h2>Create Comment</h2>\n\n<div>\n  <label for=\"content\">Comment Content:</label>\n  <textarea id=\"content\" [(ngModel)]=\"content\"></textarea>\n</div>\n\n<button (click)=\"submitComment()\">Submit Comment</button>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  email: any;\n  otp: any;\n  newPassword: any;\n  \n\n  constructor(private apiService: ApiService, private router: Router,) { }\n\n  ngOnInit(): void {\n  }\n\n  sendOTP() {\n    document.getElementById('main_loader').style.display = \"block\";\n    \n    if (!this.email) {\n      alert('Please provide a valid email ID.');\n      document.getElementById('main_loader').style.display = \"none\"; // Stop the spinner\n      return;\n    }\n  \n    this.apiService.sendOTPByEmail(this.email).subscribe(\n      (response) => {\n        console.log('OTP sent successfully:', response);\n  \n        document.getElementById('main_loader').style.display = \"none\"; // Stop the spinner\n        document.getElementById('showMessage').style.display = \"block\";\n  \n        setTimeout(() => {\n          document.getElementById('showMessage').style.display = \"none\";\n        }, 3000);\n  \n        this.otp = this.otp;\n      },\n      (error) => {\n        console.error('Failed to send OTP:', error);\n        document.getElementById('main_loader').style.display = \"none\"; // Stop the spinner\n      }\n    );\n  }\n  \n\n  resetPassword() {\n\n    if (!this.email || !this.otp || !this.newPassword) {\n      alert('Please fill all the required fields');\n      return;\n    }\n    this.apiService.resetPassword(this.email, this.otp, this.newPassword).subscribe(\n      (response) => {\n        console.log('Password reset successful:', response);\n        alert('Password reset successful'); \n        this.email = '';\n        this.otp = ''; \n        this.newPassword = ''; \n      },\n      (error) => {\n        console.error('Failed to reset password:', error);\n      }\n    );\n  } \n}\n","<div id=\"main_loader\" style=\"display:none;\">\n  <div class=\"loader-wrapper\">\n      <div class=\"lds-roller\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n      </div>\n  </div>\n</div>\n\n\n\n<div class=\"login-page\">\n  <div class=\"form-container\">\n    <div class=\"ansh\" style=\"padding-top: 10px;\">\n      <label for=\"emailInput\"><h2>Forgot-password</h2></label>\n      \n  </div>\n\n    <div class=\"forgot-password-form\">\n      <input type=\"email\" [(ngModel)]=\"email\" id=\"emailInput\" placeholder=\"Enter your email\" style=\"margin-bottom: 20px;width: 100%\">\n      <label id=\"showMessage\" style=\"display: none;\">OTP sent successfully</label>\n      <button (click)=\"sendOTP()\">Send OTP</button>\n    </div>\n\n    <div class=\"forgot-password-form\">\n      <input type=\"text\" [(ngModel)]=\"otp\" placeholder=\"Enter OTP\" style=\"margin-top: 20px;width: 100%;border-radius: 4px;border: 1px solid #ccc;padding: 8px;\">\n      <input type=\"password\" [(ngModel)]=\"newPassword\" placeholder=\"Enter new password\" style=\"margin-top: 20px;margin-bottom: 20px;width: 100%\">\n      <button (click)=\"resetPassword()\">Reset Password</button>\n    </div>\n    \n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-header-detail',\n  templateUrl: './header-detail.component.html',\n  styleUrls: ['./header-detail.component.css']\n})\nexport class HeaderDetailComponent implements OnInit {\n  header: any;\n\n\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.header = params['header'];\n   \n    });\n  }\n}\n","<p>header-detail works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  users: any;\n  roles: any;\n \n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.apiService.getusers().subscribe(\n      (response) => {\n        this.roles = response.map((user: any) => user.roles);\n        console.log(this.roles);\n      },\n      (error) => {\n        console.error(error);\n      }\n      \n    );\n    \n  }\n}\n\n","<div class=\"container\">\n    <table id=\"\"class=\"table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Name</th>\n        <th>Email</th>\n        <th>Password</th>\n        <th>Roles</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let user of users\">\n        <td>{{ user.id }}</td>\n        <td>{{ user.name }}</td>\n        <td>{{ user.email }}</td>\n        <td>{{ user.password }}</td>\n        <td>{{ user.roles }}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-journey-report',\n  templateUrl: './journey-report.component.html',\n  styleUrls: ['./journey-report.component.css']\n})\nexport class JourneyReportComponent implements OnInit {\n  userId: number;\n  file: File;\n  content: string = '';\n  header: string = '';\n  selectedFile: File | null = null;\n  isUserValid: boolean = true; \n\n  constructor(private apiService: ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n    const userItem = localStorage.getItem('user');\n    if (userItem) {\n      this.userId = JSON.parse(userItem).id;\n    } else {\n      this.isUserValid = false; \n    }\n  }\n\n  createPost(): void {\n    if (!this.isUserValid) {\n      console.log('Invalid user');\n      \n      return;\n    }\n\n    let obj = {\n      'content': this.content,\n      'header': this.header,\n      'file': this.file.name,\n      'userId': this.userId\n    }\n\n    this.apiService.createPost(obj).subscribe(\n      (response) => {\n        console.log('Post created successfully', response);\n        alert('Post created successfully');\n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Error creating post', error);\n      }\n    );\n  }\n\n  onFileSelected(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.file = inputElement.files[0];\n      console.log('53535', this.file);\n    }\n  }\n}\n","<h1>Create Post</h1>\r\n<input type=\"text\" [(ngModel)]=\"header\" placeholder=\"Post Header\">\r\n<textarea [(ngModel)]=\"content\" placeholder=\"Post Content\"></textarea>\r\n<input type=\"file\" name=\"user_file\"(change)=\"onFileSelected($event)\">\r\n<button (click)=\"createPost()\">Create Post</button>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: any;\n  password: any;\n  showPasswordResetForm: boolean = false;\n  forgotPasswordForm: boolean = false;\n  otp: any;\n  newPassword: any;\n\n\n  constructor(private apiService: ApiService, private router: Router) {}\n\n  onLogin() {\n    this.apiService.login(this.email, this.password).subscribe(\n      (response) => {\n        const token = response.token;\n\n        if (token) {\n        localStorage .setItem('token', token);\n          this.redirectToDashboard();\n        } else {\n          console.error('Token not found in the response:', response);\n        }\n      },\n      (error) => {\n        console.error(error);\n      \n        this.showAlert('error', 'Invalid email or password');\n      }\n    );\n  }\n\n  \n\n  showAlert(type: string, message: string) {\n   \n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n\n  \n  redirectToDashboard() {\n \n    this.apiService.getUser().subscribe(\n      (response) => {\n        console.log('sjsjsjsjsj ', response)\n        const user = response.data;\n       \n      localStorage .setItem('user', JSON.stringify(user));\n        const roles = user.roles;\n        if (roles) {\n        localStorage.setItem('role', roles);\n        \n          this.redirectBasedOnRole(roles);\n\n        } else {\n          console.error('Role not found in the user details:', user);\n        }\n      },\n      (error) => {\n        console.error('Failed to fetch user:', error);\n        this.showAlert('error', 'Failed to fetch user details');\n      }\n    );\n  }\n  // onResetPassword() {\n  //   this.router.navigate(['/reset-password']);\n  // }\n  // onResetPasswordd() {\n  \n  //   this.apiService.resetPasswordd(this.email).subscribe(\n  //     (response) => {\n  //       this.showAlert('success', response.message);\n       \n  //     },\n  //     (error) => {\n  //       console.error('Password reset failed:', error);\n  //       this.showAlert('error', 'Failed to reset password');\n  //     }\n  //   );\n  // }\n\n  navigateToForgotPassword() {\n    this.router.navigate(['/forgot-password']);\n  }\n  \n\n  redirectBasedOnRole(role: string) {\n    if (role === 'admin') {\n      this.router.navigate(['/admin']);\n    } else if (role === 'basic') {\n      this.router.navigate(['/basic']);\n    } else if (role === 'supervisior') {\n      this.router.navigate(['/supervisior']);\n    } else {\n      console.error('Unrecognized role:', role);\n    }\n  }\n\n  ngOnInit(): void {\n  }\n \n  \n\n  \n}\n","<div class=\"login-page\">\n  <div class=\"forms-container\">\n\n<form class=\"login-form\" (ngSubmit)=\"onLogin()\">\n  <h2>Welcome to the login page</h2>\n  <div class=\"form-group\">\n    <label>Email</label>\n    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n  </div>\n\n  <button type=\"submit\" class=\"btn\">Login</button>\n  <a (click)=\"navigateToForgotPassword()\" style=\"padding-left: 53px;\">Forgot Password?</a>\n  \n</form>\n \n  </div>\n</div>","import { ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  postId: number;\n  post: any;\n  postImageUrls:{ [postId: number]: SafeResourceUrl } = {};\n  isUserValid: any;\n  users: any;\n  imageUrl: SafeResourceUrl | null = null; \n  header: string | null = null;\n  userId: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private sanitizer: DomSanitizer \n  ) {}\n\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.postId = +params['id'];\n      this.fetchPostDetails();\n      this.fetchCommentsForPost(); \n    });\n  }\n\n  fetchPostDetails() {\n    this.apiService.getPosts().subscribe(\n      (posts) => {\n        this.post = posts.find((post: any) => post.id === this.postId);\n        if (this.post) {\n          const imageUrl = this.post.url; \n          this.imageUrl = this.sanitizer.bypassSecurityTrustResourceUrl(imageUrl);\n        }\n      },\n      (error) => {\n        console.error('Failed to fetch post details:', error);\n      }\n    );\n  }\n\n  fetchCommentsForPost() {\n    if (this.postId) { \n      this.apiService.getComments().subscribe(\n        (comments) => {\n          console.log('All comments:', comments); \n          this.post.comments = comments.filter((comment: any) => comment.postId === this.postId);\n          console.log('Filtered comments:', this.post.comments); \n        },\n        (error) => {\n          console.error('Failed to fetch comments:', error);\n        }\n      );\n    }\n  }\n}\n","<div *ngIf=\"post\" class=\"post\" style=\"border: 1px solid #ccc; padding: 20px; margin: 155px; margin-top: px;\">\n  <div class=\"post-header\">\n    <h3><a [routerLink]=\"['/post', post.id]\">{{ post.header }}</a></h3>\n    <p class=\"post-date\">postcreatedon: {{ post.created_date }}</p>\n  </div>\n\n  <div *ngIf=\"imageUrl\">\n    <img [src]=\"imageUrl\" alt=\"Image\">\n  </div>\n\n  <div class=\"post-content\" style=\"margin: 10px;\">\n    <p>{{ post.content }}</p>\n  </div>\n\n  <div class=\"comments-section\">\n    <h4>Comments</h4>\n    <div *ngFor=\"let comment of post.comments\" class=\"card mb-4\" style=\"background-color:#EEF0F2; border: 1px solid #ccc; padding: 20px; height: 15%;\">\n      <div class=\"card-body\">\n        <p>{{ comment.content }}</p>\n        <div class=\"d-flex justify-content-between\">\n          <div class=\"d-flex flex-row align-items-center\">\n            <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\" height=\"25\" />\n            <p class=\"small mb-0 ms-2\">{{ comment.name }}</p>\n          </div>\n          <div class=\"d-flex flex-row align-items-center\">\n            <p class=\"small text-muted mb-0\">votes?</p>\n            <i class=\"far fa-thumbs-up mx-2 fa-xs text-black\" style=\"margin-top: -0.16rem;\"></i>\n            <p class=\"small text-muted mb-0\">{{ comment.upvotes }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, HostListener, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-public-page',\n  templateUrl: './public-page.component.html',\n  styleUrls: ['./public-page.component.css']\n})\n\nexport class PublicPageComponent implements OnInit {\n  posts: any[] = [];\n  postImageUrls: { [postId: number]: SafeResourceUrl } = {};\n  isUserValid = false;\n  userName: any;\n  userId: any;\n  postCount: any;\n  url:any;\n  commentCount: any;\n  file: File;\n  content: string = '';\n  header: string = '';\n  selectedFile: File | null = null;\n  users: any[] = [];\n  searchQuery: string = '';\n  searchText: string = ''; \n\n  originalKeyValuePairs: { key: string; value: string }[] = [];\n  filteredKeyValuePairs: { key: string; value: string }[] = [];\n\n  targetUserId: number;\n  requesterId: number;\n  btnId: any = '';\n  combineddatah: any[] = [];\n  elementRef: any;\n  postHeaders: string[] = [];\n  userid: any;\n  \n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private datePipe: DatePipe,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit(): void {\n    // this.checkTokenExpiration() \n\n    this.retrievePosts();\n    this.checkIfUserLoggedIn();\n    this.getUserStatsFromLocalStorage(this.userId);\n    this.getUsers();\n    this.combineddata();\n    this.createPost();\n    \n }\n\n  search(): void {\n    this.filteredKeyValuePairs = this.originalKeyValuePairs.filter(pair =>\n      pair.key.toLowerCase().includes(this.searchText.toLowerCase()) ||\n      pair.value.toLowerCase().includes(this.searchText.toLowerCase())\n    );\n  }\n \n  getUserImageUrl(): string {\n    if (this.isUserValid && this.users && this.users.length > 0) {\n      const loggedInUserId = this.userId;\n      const loggedInUser = this.users.find((user) => user.id === loggedInUserId);\n      if (loggedInUser) {\n        const imageUrl = loggedInUser.url || 'd.jpg.jpg';\n        \n        return 'http://localhost:4000/uploads/' + imageUrl;\n      }\n    }\n  }\n  \n  // combineddata(){\n  //   this.apiService.getCombinedData().subscribe(\n  //     (data) => {\n      \n  //       this.combineddatah = data.map((user) => {\n  //         return {\n  //           ...user,\n  //           followStatus: user.receivedFollows.length > 0 ? user.receivedFollows[0].status : null,\n          \n  //         };\n  //       });\n  //           console.log()\n  //       console.log('Combined Data:', this.combineddatah);\n  //     },\n  //     (error) => {\n  //       console.error('Error fetching combined data:', error);\n  //     }\n  //   );\n  // }\n\n  combineddata() {\n  this.apiService.getCombinedData().subscribe(\n    (data) => {\n      this.combineddatah = data.map((user) => {\n        return {\n          ...user,\n          followStatus: user.followRequest === 1 ? 'Received' : 'Not Received'\n        };\n      });\n      console.log('Combined Data:', this.combineddatah);\n    },\n    (error) => {\n      console.error('Error fetching combined data:', error);\n    }\n  );\n}\n\n\n  getButtonText(followStatus: string | null): string {\n \n    return followStatus === 'pending' ? 'Requested' : 'Follow' ;\n  }\n\n  isRequested(followStatus: string | null): boolean {\n    \n    return followStatus === 'pending';\n  }\n\n  checkIfUserLoggedIn() {\n    const userItem = localStorage.getItem('user');\n    if (userItem) {\n      const user = JSON.parse(userItem);\n      this.userId = user.id;\n      this.userName = user.name;\n      console.log(this.userName);\n\n      this.isUserValid = true;\n    } else {\n      this.isUserValid = false;\n    }\n  }\n\n  retrievePosts() {\n    this.apiService.getPosts().subscribe(\n      (posts) => {\n        this.posts = this.mapPosts(posts);\n        this.fetchCommentsForPosts();\n        console.log('Posts:', this.posts);\n      },\n      (error) => {\n        console.error('Failed to fetch posts:', error);\n      }\n    );\n  }\n\n  fetchCommentsForPosts() {\n    this.posts.forEach((post) => {\n      this.apiService.getComments().subscribe(\n        (comments) => {\n          post.comments = comments.filter((comment) => comment.postid === post.id);\n        },\n        (error) => {\n          console.error('Failed to fetch comments:', error);\n        }\n      );\n    });\n  }\n\n  formatDateTime(dateTime: string): string {\n    const date = new Date(dateTime);\n    const formattedDate = date.toDateString();\n    const formattedTime = date.toTimeString().slice(0, 8);\n    return `${formattedDate} ${formattedTime}`;\n  }\n\n  toggleCommentSection(postId: number) {\n    const post = this.posts.find((p) => p.id === postId);\n    if (post) {\n      post.showCommentSection = !post.showCommentSection;\n    }\n  }\n\n  // submitComment(postId: number) {\n  //   const post = this.posts.find((p) => p.id === postId);\n  //   if (post && post.commentContent) {\n  //     this.apiService.createComment(post.commentContent, postId).subscribe(\n  //       (response) => {\n  //         console.log('Response:', response);\n  //         // alert('Comment saved successfully');\n  //         post.showCommentSection = false;\n  //         post.commentContent = '';\n  //       },\n  //       (error) => {\n  //         console.error('Error:', error);\n  //       }\n  //     );\n  //   } else {\n  //     console.log('Content is required.');\n  //   }\n  // }\n  \n  submitComment(postId: number) {\n    const post = this.posts.find((p) => p.id === postId);\n    if (post && post.commentContent) {\n    \n      const token = localStorage.getItem('token');\n      if (!token) {\n      \n        window.location.reload();\n        return;\n      }\n  \n      this.apiService.createComment(post.commentContent, postId).subscribe(\n        (response) => {\n          console.log('Response:', response);\n  \n          post.comments.push(response);\n  \n          post.commentContent = '';\n  \n          post.showCommentSection = false;\n  \n          this.apiService.getComments().subscribe(\n            (comments) => {\n              post.comments = comments.filter((comment) => comment.postid === post.id);\n            },\n            (error) => {\n              console.error('Failed to fetch comments:', error);\n            }\n          );\n        },\n        (error) => {\n          console.error('Error:', error);\n        }\n      );\n    } else {\n      console.log('Content is required.');\n    }\n  }\n  \n  // checkTokenExpiration() {\n  //   this.apiService.checkTokenExpiration().subscribe(\n  //     (response) => {\n  //       if (response.expired) {\n  //         console.log('Token is expired');\n  //         this.router.navigate(['/login']);\n          \n  //       } else {\n  //         console.log('Token is valid');\n  //       }\n  //     },\n  //     (error) => {\n  //       console.error('Error checking token expiration:', error);\n  //       this.router.navigate(['/login']);\n  //     }\n  //   );\n  // }\n  \n\n\n  mapPosts(posts: any[]): any[] {\n    const sortedPosts = posts.sort((a, b) => {\n      return new Date(b.created_date).getTime() - new Date(a.created_date).getTime();\n    });\n\n    return sortedPosts.map((post) => {\n      const sanitizedUrl = post.url ? this.sanitizer.bypassSecurityTrustResourceUrl(post.url) : null;\n      this.postImageUrls[post.id] = sanitizedUrl;\n      return {\n        ...post,\n        showCommentSection: false,\n        commentContent: '',\n        comments: [],\n        created_date: this.formatDateTime(post.created_date),\n      };\n    });\n  }\n\n  getUserStatsFromLocalStorage(userId: number) {\n    userId = this.userId;\n    this.apiService.getUserStats(userId).subscribe(\n      (stats: any) => {\n        console.log('User stats:', stats);\n        this.postCount = stats.postCount;\n        this.commentCount = stats.commentCount;\n      },\n      (error: any) => {\n        console.error('Failed to fetch user statistics:', error);\n      }\n    );\n  }\n\n  getUsers() {\n    this.apiService.getusers().subscribe(\n      (users) => {\n        this.users = users;\n        console.log('Users:', this.users);\n      },\n      (error) => {\n        console.error('Failed to fetch users:', error);\n      }\n    );\n  }\n\n  \n//  logout(): void {\n//   this.apiService.logout().subscribe(\n//     (response) => {\n//       localStorage.removeItem('token');\n//       localStorage.removeItem('role');\n//       localStorage.removeItem('user');\n//       console.log('Logged out successfully');\n\n//       const expirationTime = response.expirationTime;\n//       console.log(`Token expired at: ${new Date(expirationTime)}`);\n\n//       // Check if the token is already expired\n//       const currentTime = Date.now();\n//       if (expirationTime && expirationTime < currentTime) {\n//         console.log('Token has already expired, redirecting to login');\n//         this.router.navigate(['/login']);\n//       } else {\n//         sessionStorage.clear();\n//         this.router.navigate(['/login']);\n//       }\n//     },\n//     (error) => {\n//       console.error('Logout failed:', error);\n//     }\n//   );\n// }\n\n  logout(): void {\n  this.apiService.logout().subscribe(\n    (response) => {\n      localStorage.removeItem('token');\n      localStorage.removeItem('role');\n      localStorage.removeItem('user');\n      console.log('Logged out successfully');\n\n      const expirationTime = response.expirationTime;\n      console.log(`Token expired at: ${new Date(expirationTime)}`);\n\n    \n      const currentTime = Date.now();\n      if (expirationTime && expirationTime < currentTime) {\n        console.log('Token has already expired, redirecting to login');\n        this.router.navigate(['/login']);\n      } else {\n        sessionStorage.clear();\n        this.router.navigate(['/login']);\n      }\n    },\n    (error) => {\n      console.error('Logout failed:', error);\n    }\n  );\n  }\n\n  createPost(): void {\n    if (!this.isUserValid) {\n      console.log('Invalid user');\n      return;\n    }\n    \n\n    let obj = {\n      content: this.content,\n      header: this.header,\n      file: this.file.name,\n      // url:this.url,\n      userid: this.userId,\n    };\n\n    console.log('object ',obj);\n\n    \n\n    this.apiService.createPost(obj).subscribe(\n      (response) => {\n        console.log('Post created successfully', response);\n        alert('Post created successfully');\n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Error creating post', error);\n      }\n    );\n  }\n\n  onFileSelected(event: Event): void {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.file = inputElement.files[0];\n      console.log('53535', this.file);\n    }\n  }\n\n  onClickButton(targetUserId: number) {\n    this.btnId =targetUserId;\n    const userDataString = localStorage.getItem('user');\n    const userData = JSON.parse(userDataString);\n    const requesterId = userData?.id;\n    if (!requesterId) {\n      console.error('Requester ID not found in localStorage.');\n      return;\n    }\n\n    this.apiService.sendFollowRequest(targetUserId, requesterId).subscribe(\n      (response) => {\n        console.log('Follow request sent successfully:', response);\n        if(response.status === 'pending'){\n          document.getElementById(this.btnId).innerText = 'Requested'; \n        }\n      },\n      (error) => {\n        console.error('Failed to send follow request:', error);\n      }\n    );\n  }\n\n  // getRequesterIdFromLocalStorage(): number | null {\n  //   const userDataString = localStorage.getItem('userData');\n  //   if (userDataString) {\n  //     try {\n  //       const userData = JSON.parse(userDataString);\n  //       return userData.id;\n  //     } catch (error) {\n  //       console.error('Error parsing localStorage data:', error);\n  //     }\n  //   }\n  //   return null;\n  // }\n\n  getFollowRequests() {\n    const userDataString = localStorage.getItem('user');\n    const userData = JSON.parse(userDataString);\n    const requesterId = userData?.id;\n    if (!requesterId) {\n      console.error('Requester ID not found in localStorage.');\n      return;\n    }\n  \n    this.apiService.getFollowRequests(requesterId).subscribe(\n      (response) => {\n        console.log('Follow requests:', response);\n      },\n      (error) => {\n        console.error('Failed to get follow requests:', error);\n      }\n    );\n  }\n  \n  updateFollowRequestStatus(requestId: number, status: string) {\n    this.apiService.updateFollowRequestStatus(requestId, status).subscribe(\n      (response) => {\n        console.log('Follow request status updated:', response);\n     \n      },\n      (error) => {\n        console.error('Failed to update follow request status:', error);\n      \n      }\n    );\n  }\n  \n}  \n\n \n  \n  \n\n \n\n","\n<nav class=\"navbar navbar-expand-lg bg-light fixed-top\" style=\"height: 50px;\" data-bs-theme=\"light\">\n  <div class=\"container-fluid\">\n\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarColor03\"\n      aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n      <!-- <input class=\"form-control me-sm-2\" type=\"search\" placeholder=\"Search\">\n      <button class=\"btn btn-secondary my-2 my-sm-0\" type=\"submit\">Search</button> -->\n      <!-- <input type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\" placeholder=\"Search\">\n<div *ngIf=\"searchText\">\n  <ul>\n    <li *ngFor=\"let pair of filteredKeyValuePairs\"> -->\n      <!-- <a [routerLink]=\"['/details', pair.key]\"> -->\n        <!-- <strong>{{ pair.key }}:</strong> \n        {{ pair.value }} -->\n      <!-- </a> -->\n    <!-- </li>\n  </ul>\n</div> -->\n\n<input type=\"text\" [(ngModel)]=\"searchText\" (input)=\"search()\" placeholder=\"Search\">\n<div *ngIf=\"searchText\" style=\"width: 250px; height: auto; position: fixed; top:45px; min-height: 100px; height: 100%; max-height: 300px; overflow-y: auto;\">\n  <ul class=\"search-results\" style=\"width: 100%;background-color: lavender;\">\n    <li *ngFor=\"let post of posts\" >\n      <a [routerLink]=\"['/post', post.id]\">{{ post.header }}</a>\n      <!-- <strong>{{ pair.key }}:</strong> {{ pair.value }}</a> -->\n    </li>\n  </ul>\n</div>\n\n\n\n    <div *ngIf=\"!isUserValid\">\n      <span class=\"navbar-icon\"><i class=\"fas fa-cog\"></i></span>&nbsp;\n      <span class=\"navbar-icon\"><i class=\"fas fa-bell\"></i></span> &nbsp;\n      <span class=\"navbar-icon\"><i class=\"fas fa-envelope\"></i></span> &nbsp;\n      <a routerLink=\"/login\">\n        Login &\n      </a>\n\n      <a routerLink=\"/register\">Register</a>\n\n    </div>\n\n    <div *ngIf=\"isUserValid\" class=\"d-flex align-items-center\">\n      <div class=\"hi\">\n        <p style=\"margin-bottom: 0;margin-right: 9px;\">Welcome, {{ userName }}</p>\n      </div>&nbsp;\n    \n      <div class=\"valid-user1 ml-auto\" style=\"margin-bottom: 21px;\">\n        <!-- <a [routerLink]=\"'/report'\" class=\"mr-3 button-link\">Create Post</a> -->\n        <button (click)=\"logout()\"style=\" background: transparent;border: 0;color: #558ed7;text-decoration: underline;padding: 0px;margin: 0px;margin-top: 20px;\">Logout</button>\n      </div>\n      \n    </div>\n    \n    \n  </div>\n  \n</nav>\n<div *ngIf=\"!isUserValid\">\n <div class=\"horizon\"> \n \n\n  <div class=\"pen\" style=\"background: white; width: 100%; margin-top:47px; padding-right: 10px;margin-left: 20px;\" >\n   <div *ngFor=\"let post of posts\" class=\"post\">\n    <div class=\"post-header\">\n      <h3><a [routerLink]=\"['/post', post.id]\">{{ post.header }}</a></h3>\n      <p class=\"post-date\">postcreatedon: {{ post.created_date }}</p>\n    </div>\n\n      <div class=\"post-content\">\n        <img *ngIf=\"postImageUrls[post.id]\" [src]=\"postImageUrls[post.id]\" alt=\"Post Image\">\n      </div>\n      <div class=\"post-content\">\n        <p>{{ post.content }}</p>\n      </div>\n\n      <div class=\"comments-section\">\n        <h4>Comments</h4>\n        <div *ngFor=\"let comment of post.comments\" class=\"card mb-4\" style=\" background-color:#EEF0F2;border: 1px solid #ccc;\n        padding: 20px;\n        /* margin-top: 46px; */\n        height: 15%;\">\n          <div class=\"card-body\">\n            <p>{{ comment.content }}</p>\n            <div class=\"d-flex justify-content-between\">\n              <div class=\"d-flex flex-row align-items-center\">\n                <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\"\n                  height=\"25\" />\n                <p class=\"small mb-0 ms-2\">{{ comment.name }}</p>\n              </div>\n\n          \n              <div class=\"d-flex flex-row align-items-center\">\n                <p class=\"small text-muted mb-0\">votes?</p>\n                <i class=\"far fa-thumbs-up mx-2 fa-xs text-black\" style=\"margin-top: -0.16rem;\"></i>\n                <p class=\"small text-muted mb-0\">{{ comment.upvotes }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button class=\"comment-button\" (click)=\"toggleCommentSection(post.id)\">Add Comment</button>\n      <div class=\"comment-section\" *ngIf=\"post.showCommentSection\">\n        \n        <div class=\"card shadow-0 border\" style=\"background-color: #f0f2f5;\">\n          <div class=\"card-body p-4\">\n            <div class=\"form-outline mb-4\">\n              <input type=\"text\" [(ngModel)]=\"post.commentContent\" id=\"addANote\" class=\"form-control\"\n                placeholder=\"Type comment...\" />\n              <label class=\"form-label\" for=\"addANote\">+ Add a note</label>\n            </div>\n            \n            <button class=\"submit-button\" (click)=\"submitComment(post.id)\">Submit Comment</button>\n          </div>\n        </div>\n      </div>\n\n      <hr>\n    </div>\n  </div>\n\n\n  <!-- <div class=\"horizonss\">\n    <div class=\"card-body\" style=\"border: 1px solid #ccc; height: 50%;; width: 100%; margin-top: 47px;\">\n      <div class=\"col-sm-6 col-lg-12\">\n        <div class=\"card\" style=\"margin: 19px;\">\n       \n          <div class=\"card-header pb-0 border-0\">\n            <h5 class=\"card-title mb-0\">Who to follow</h5>\n          </div>\n      \n\n          <div class=\"card-body\">\n         \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#!\"><img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/04.jpg\" alt=\"\"></a>\n              </div>\n           \n              <div class=\"overflow-hidden\">\n                <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                <p class=\"mb-0 small text-truncate\">Web Developer</p>\n              </div>\n           \n              <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n            </div>\n        \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n              </div>\n         \n                <div class=\"overflow-hidden\">\n                  <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                  <p class=\"mb-0 small text-truncate\">Web Developer</p>\n                </div>\n             \n                <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n              </div>\n              <div class=\"hstack gap-2 mb-3\">\n           \n                <div class=\"avatar\">\n                  <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n                </div>\n           \n                  <div class=\"overflow-hidden\">\n                    <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                    <p class=\"mb-0 small text-truncate\">Web Developer</p>\n                  </div>\n               \n                  <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n                </div>\n              <div class=\"hstack gap-2 mb-3\">\n             \n                <div class=\"avatar\">\n                  <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n                </div>\n           \n              <div class=\"overflow-hidden\">\n                <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                <p class=\"mb-0 small text-truncate\">Web Developer</p>\n              </div>\n           \n              <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n            </div>\n        \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n              </div>\n             \n              <div class=\"overflow-hidden\">\n                <a class=\"h6 mb-0\" href=\"#!\">Amanda Reed </a>\n                <p class=\"mb-0 small text-truncate\">Web Developer</p>\n              </div>\n           \n              <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\"><i class=\"fa-solid fa-plus\"> </i></a>\n            </div>\n        \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#\"> <img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/01.jpg\" alt=\"\"> </a>\n              </div>\n         \n            <div class=\"d-grid mt-3\">\n              <a class=\"btn btn-sm btn-primary-soft\" href=\"#!\">View more</a>\n            </div>\n          </div>\n          \n         \n        </div>\n      </div>\n    </div>\n    </div>\n    </div> -->\n</div> \n</div>\n\n<div *ngIf=\"isUserValid\">\n<div class=\"horizon\" >\n  <div class=\"horizons\">\n    <div class=\"card overflow-hidden\" style=\"margin-right: 14px;margin-top: 45px;\">\n      <div class=\"card-body pt-0\">\n        <div class=\"text\">\n          <div class=\"change\">\n            <div class=\"text1\">\n              <div class=\"change1\" style=\"padding-left: 11px;\">\n                <!-- Display user's image from the currently logged-in user -->\n                <img class=\"rounded-circle\" height=\"50px\" weight=\"5px\" [src]=\"getUserImageUrl()\" alt=\"User Image\" />\n              </div>\n\n            </div>\n            <h5 class=\"mb-0\"> <a href=\"#!\"></a>{{userName}} </h5>\n            <small>Web Developer at Webestica</small>\n            <p class=\"mt-3\">I'd love to change the world, but they won’t give me the source code.</p>\n            <div class=\"hstack gap-2 gap-xl-3 justify-content-center\">\n              <div>\n                <h6 class=\"mb-0\">{{postCount}}</h6>\n                <small>Post</small>\n              </div>\n              <div class=\"vr\"></div>\n              <div>\n                <h6 class=\"mb-0\">{{commentCount}}</h6>\n                <small>Comments</small>\n              </div>\n            </div>\n          </div>\n          <hr>\n\n          <ul class=\"nav nav-link-secondary flex-column fw-bold gap-2\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-home\"></i>\n             Feed</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-network-wired\"></i>\n                Connections</a>\n            </li>\n\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"far fa-calendar-alt\"></i>\n                Events</a>\n            </li>\n\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-users\"></i>\n                Groups</a>\n\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-bell\"></i>\n                Notifications</a>\n                \n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#!\"> <i class=\"fas fa-cog\"></i>\n                Settings</a>\n            </li>\n          </ul>\n\n        </div>\n\n        <div class=\"card-footer text-center py-2\">\n          <a class=\"btn btn-link btn-sm\" href=\"#!\">View Profile </a>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <div class=\"ansh\">\n   \n  <div class=\"hello2\">\n      <div class=\"col\">\n        <div class=\"card8\" >\n      \n          <div class=\"card-body\">\n            <div class=\"text1\">\n              <div class=\"change1\" >\n                <h2>Create Post</h2>\n                <img height=\"50px\" weight=\"5px\" src=\"assets/pps.jpg\" alt=\"User Image\" style=\"margin-left: 10px;\" />\n              </div>\n          </div>\n          \n            <div class=\"form-group\">\n              <label for=\"postHeader\" style=\"color: #25292e;margin-left: 10px;\">Post Header</label>\n              <input type=\"text\" class=\"form-control\" id=\"postHeader\" [(ngModel)]=\"header\" placeholder=\"\"\n               style=\"border: 0;\n              background-color: #f8f9fa;width: 96%;margin-left: 11px;\">\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"postContent\" style=\"color: #25292e; margin-left: 10px;\">Post Content</label>\n              <textarea class=\"form-control\" id=\"postContent\" [(ngModel)]=\"content\" placeholder=\"\"\n                style=\"border: 0; background-color: #f8f9fa; width: 96%; margin-left: 11px; height: 100px;\"></textarea>\n            </div>\n            \n          \n            <div class=\"form-group d-flex\">\n              <div class=\"mr-2\">\n                <label for=\"postImage\" style=\"color: #11171d;margin-left: 10px;\"></label>\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" style=\"border: 0; background-color: #f8f9fa;margin-left: 11px;\"><i class=\"fas fa-file\"></i></span>\n                  </div>\n                  <div class=\"custom-file\">\n                    <input type=\"file\" class=\"custom-file-input\" id=\"postImage\" style=\"margin-right: -45px;\"    name=\"user_file\" (change)=\"onFileSelected($event)\">\n              \n                  </div>\n                </div>\n              </div>\n             \n              <ul class=\"nav nav-pills nav-stack small fw-normal\" style=\"margin-top: 24px;\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link bg-light py-1 px-2 mb-0\" href=\"#!\" style=\"margin-right:2px; margin-left: 86px;\" data-bs-toggle=\"modal\" data-bs-target=\"#feedActionPhoto\"> <i class=\"bi bi-image-fill text-success pe-2\"></i>Photo</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link bg-light py-1 px-2 mb-0\" href=\"#!\" style=\"margin-left: 4px;\" data-bs-toggle=\"modal\" data-bs-target=\"#feedActionVideo\"> <i class=\"bi bi-camera-reels-fill text-info pe-2\"></i>Video</a>\n                </li>\n                <li class=\"nav-item\">\n                  <a href=\"#\" class=\"nav-link bg-light py-1 px-2 mb-0\"  style=\"margin-left: 4px;\" data-bs-toggle=\"modal\" data-bs-target=\"#modalCreateEvents\"> <i class=\"bi bi-calendar2-event-fill text-danger pe-2\"></i>Event </a>\n                </li>\n                <a class=\"nav-link bg-light py-1 px-2 mb-0\" href=\"#!\" style=\"margin-left: 4px;\" (click)=\"createPost()\">\n                  <i class=\"fas fa-plus-circle\" style=\"color: #ff0000;\"></i> Create Post\n                </a>\n              </ul>\n            </div>\n          </div>\n          </div>\n      </div>\n    </div>\n\n\n    \n    <div class=\"row\">\n      <div class=\"col\">\n        <div class=\"col\">\n          <div class=\"content\">\n            <div *ngFor=\"let post of posts\" class=\"post\">\n              <div class=\"post-header\">\n                <h3>{{ post.header }}</h3>\n                <p class=\"post-date\">postcreatedon: {{ post.created_date }}</p>\n              </div>\n              <div class=\"post-content\">\n                <img *ngIf=\"postImageUrls[post.id]\" [src]=\"postImageUrls[post.id]\" alt=\"Post Image\">\n              </div>\n              <div class=\"post-content\">\n                <p>{{ post.content }}</p>\n              </div>\n\n              <div class=\"comments-section\">\n                <h4>Comments</h4>\n                <div *ngFor=\"let comment of post.comments\" class=\"card mb-4\" style=\" background-color:#EEF0F2;border: 1px solid #ccc;padding: 20px; /* margin-top: 46px; */height: 15%;\">\n                  <div class=\"card-body\">\n                    <p>{{ comment.content }}</p>\n                    <div class=\"d-flex justify-content-between\">\n                      <div class=\"d-flex flex-row align-items-center\">\n                        <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\"\n                          height=\"25\" />\n                        <p class=\"small mb-0 ms-2\">{{ comment.name }}</p>\n                      </div>\n                      <div class=\"d-flex flex-row align-items-center\">\n                        <p class=\"small text-muted mb-0\">votes?</p>\n                        <i class=\"far fa-thumbs-up mx-2 fa-xs text-black\" style=\"margin-top: -0.16rem;\"></i>\n                        <p class=\"small text-muted mb-0\">{{ comment.upvotes }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <button class=\"comment-button\" (click)=\"toggleCommentSection(post.id)\">Add Comment</button>\n              <div class=\"comment-section\" *ngIf=\"post.showCommentSection\">\n                \n                <div class=\"card shadow-0 border\" style=\"background-color: #f0f2f5;\">\n                  <div class=\"card-body p-4\">\n                    <div class=\"form-outline mb-4\">\n                      <input type=\"text\" [(ngModel)]=\"post.commentContent\" id=\"addANote\" class=\"form-control\"\n                        placeholder=\"Type comment...\" />\n                      <label class=\"form-label\" for=\"addANote\">+ Add a note</label>\n                    </div>\n                    <button class=\"submit-button\" (click)=\"submitComment(post.id)\">Submit Comment</button>\n                  </div>\n                </div>\n              </div>\n\n              <hr>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n    <div class=\"horizonss\">\n    <div class=\"card-body\" >\n      <div class=\"col-sm-6 col-lg-12\">\n        <div class=\"card\">\n       \n          <div class=\"card-header pb-0 border-0\">\n           \n            <img height=\"50px\" weight=\"5px\" src=\"assets/follow.jpg\" alt=\"User Image\" style=\"height: 61%;margin-left: 25px;width: 76%;\" />\n          \n          </div>\n      \n          <div class=\"card-bodye\">\n         \n            <div class=\"hstack gap-2 mb-3\">\n           \n              <div class=\"avatar\">\n                <a href=\"#!\"><img class=\"avatar-img rounded-circle\" src=\"assets/images/avatar/04.jpg\" alt=\"\"></a>\n              </div>\n           \n              <!-- <div class=\"overflow-hidden\" *ngFor=\"let user of users;let i = index\">\n                <a class=\"h6 mb-0\" href=\"#!\">{{ user[0].name }}</a>\n                <button class=\"btn btn-primary ml-2\" id=\"followButton\" (click)=\"follow($event)\">Follow</button>\n              </div> -->\n\n              <div >\n\n              </div>\n\n              <!-- <div class=\"container\">\n                <ul class=\"company-list\">\n                  <div *ngFor=\"let item of combineddatah\"> -->\n                    <!-- <p #contentParagraph>{{ item.name }}</p> -->\n                    <!-- <button\n                      id=\"{{item.id}}\"\n                      class=\"btn btn-primary ml-2\"\n                      (click)=\"onClickButton(item.id)\"\n                      [disabled]=\"isRequested(item.followStatus)\">\n                      {{ getButtonText(item.followStatus) }}\n                    </button>\n                  </div>\n                </ul>\n              </div> -->\n              \n              \n           \n              <!-- <a class=\"btn btn-primary rounded-circle icon-md ms-auto\" href=\"#\">\n                <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\"\n                height=\"25\" /></a> -->\n            </div>\n            <!-- <img src=\"https://mdbcdn.b-cdn.net/img/Photos/Avatars/img%20(4).webp\" alt=\"avatar\" width=\"25\"\n            height=\"25\" />\n         -->\n          \n         \n        </div>\n      </div>\n    </div>\n    </div>\n    </div>\n\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  userForm: FormGroup;\n\n  constructor(private apiService: ApiService, private router: Router, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.userForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]], \n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required,Validators.minLength(8),Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/)]],\n      user_file: [null, Validators.required],\n      roles: ['', Validators.required]\n    });\n\n    if (localStorage.getItem('role') === 'admin') {\n      window.location.href = './admin';\n    } else if (localStorage.getItem('role') === 'supervisior') {\n      window.location.href = './supervisior';\n    } else if (localStorage.getItem('role') === 'basic') {\n      window.location.href = './basic';\n    } else {\n      this.router.navigate(['/register']);\n    }\n  }\n\n  onSubmit() {\n    if (this.userForm.valid) {\n      const user = {\n        name: this.userForm.value.name,\n        email: this.userForm.value.email,\n        password: this.userForm.value.password,\n        roles: this.userForm.value.roles,\n        file: this.userForm.value.user_file.name,\n      };\n\n      this.apiService.createUser(user).subscribe(() => {\n        this.router.navigate(['/login']);\n      });\n    } else {\n      alert('Please fill all the fields');\n    }\n  }\n\n  onImageSelected(event: Event) {\n    const inputElement = event.target as HTMLInputElement;\n    if (inputElement.files && inputElement.files.length > 0) {\n      this.userForm.patchValue({\n        user_file: inputElement.files[0]\n      });\n    }\n    \n  }\n}\n","<div class=\"card\" style=\"margin-left: 34%;\">\n<form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\" class=\"register-form\">\n  <h2 class=\"form-title\">Registration Form</h2>\n\n  <div class=\"form-group\">\n    <label for=\"name\" class=\"form-label\">Name:</label>\n    <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-input p-input\">\n    <div *ngIf=\"userForm.get('name').invalid && (userForm.get('name').dirty || userForm.get('name').touched)\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('name').errors?.required\">Name is required.</p>\n      <p *ngIf=\"userForm.get('name').errors?.pattern\">Name should only contain alphabets and spaces.</p>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"email\" class=\"form-label\">Email:</label>\n    <input type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-input p-input\">\n    <div *ngIf=\"userForm.get('email').invalid && (userForm.get('email').dirty || userForm.get('email').touched)\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('email').errors?.required\">Email is required.</p>\n      <p *ngIf=\"userForm.get('email').errors?.email\">Invalid email format.</p>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"password\" class=\"form-label\">Password:</label>\n    <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-input p-input\">\n    <div *ngIf=\"userForm.get('password').invalid && (userForm.get('password').dirty || userForm.get('password').touched)\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('password').errors?.required\">Password is required.</p>\n      <p *ngIf=\"userForm.get('password').errors?.minlength\">Password must be greater than 6 digits and contain at least 1 uppercase, 1 lowercase, 1 number, and 1 special character\"</p>\n    </div>\n  </div>\n\n  <div class=\"custom-file\">\n    <input type=\"file\" class=\"custom-file-input\" id=\"postImage\" formControlName=\"user_file\" (change)=\"onImageSelected($event)\">\n    <div *ngIf=\"userForm.get('user_file').invalid && userForm.get('user_file').touched\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('user_file').errors?.required\">File is required.</p>\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"roles\" class=\"form-label\">Roles:</label>\n    <select id=\"roles\" formControlName=\"roles\" class=\"form-input p-input\">\n      <option value=\"\">Select a role</option>\n      <option value=\"admin\">Admin</option>\n      <option value=\"supervisor\">Supervisor</option>\n      <option value=\"user\">User</option>\n    </select>\n  </div>\n\n  <div>\n    <div *ngIf=\"userForm.get('roles').invalid && (userForm.get('roles').dirty || userForm.get('roles').touched)\" class=\"error-message\">\n      <p *ngIf=\"userForm.get('roles').errors?.required\">Role is required.</p>\n    </div>\n  </div>\n\n  <div class=\"form-group button-group\">\n    <button type=\"submit\" class=\"form-button\">Register</button>\n  </div>\n  \n</form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css'],\n})\nexport class ResetPasswordComponent implements OnInit {\n  oldPassword: string;\n  newPassword: string;\n  email:any\n\n  constructor(private apiService: ApiService, private router: Router) {}\n\n  onResetPassword() {\n    this.apiService. resetP(this.email,this.oldPassword, this.newPassword).subscribe(\n      () => {\n       \n        this.showAlert('Password reset successfully','please login again');\n      \n        this.router.navigate(['/login']);\n      },\n      (error) => {\n        console.error(error);\n        this.showAlert('error', 'Failed to reset password');\n      }\n    );\n  }\n  \n\n  showAlert(type: string, message: string) {\n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","<div>\n    <h2>Reset Password</h2>\n    <form (ngSubmit)=\"onResetPassword()\">\n      <div>\n        <label for=\"oldPassword\">Old Password:</label>\n        <input type=\"password\" [(ngModel)]=\"oldPassword\" name=\"oldPassword\" required />\n      </div>\n      <div>\n        <label for=\"newPassword\">New Password:</label>\n        <input type=\"password\" [(ngModel)]=\"newPassword\" name=\"newPassword\" required />\n      </div>\n      <div>\n        <button type=\"submit\">Reset Password</button>\n      </div>\n    </form>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-supervisior',\n  templateUrl: './supervisior.component.html',\n  styleUrls: ['./supervisior.component.css']\n})\nexport class SupervisiorComponent implements OnInit {\n  roles: string;\n  users: any[];\n  showPasswordResetForm: boolean = false;\n  oldPassword: string;\n  newPassword: string;\n  email:any\n  user: unknown;\n\n  constructor(private router: Router,private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.roles = localStorage.getItem('role'); \n    if (this.roles !== 'admin' && this.roles !== 'supervisior') {\n     \n      this.router.navigate(['/login']);\n     \n    }\n    this.apiService.getusers().subscribe(\n      (response) => {\n        this.users = response; // \n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  \n    this.user = JSON.parse(localStorage.getItem('user'));\n    this.email = this.user['email'];\n  }\n\n  performUpdate(id: number): void {\n    const user = this.users.find(u => u.id === id);\n    if (!user) return;\n  \n    user.isEditing = true; // Disable editing mode\n  \n    const userData = {\n      name: user.name,\n      email: user.email,\n      password: user.password,\n      roles: user.roles\n    };\n  \n    this.apiService.updateUser(id, userData).subscribe(\n      (response) => {\n        console.log('User updated successfully');\n        // Handle any necessary UI updates or notifications\n      },\n      (error) => {\n        console.error('Failed to update user:', error);\n        // Handle the error response, display an error message, or perform any necessary error handling\n      }\n    );\n  }\n  \n  cancelUpdate(user: any): void {\n    user.isEditing = false; // Disable editing mode\n  }\n\n  onResetPassword() {\n    this.showPasswordResetForm = true;\n  }\n\n  cancelResetPassword() {\n    this.showPasswordResetForm = false;\n    this.oldPassword = '';\n    this.newPassword = '';\n  }\n\n  onResetPasswordSubmit() {\n    this.apiService. resetP(this.email,this.oldPassword, this.newPassword).subscribe(\n      () => {\n        \n        this.showAlert('success', 'Password reset successfully');\n       \n        this.cancelResetPassword();\n      },\n      (error) => {\n        console.error(error);\n        this.showAlert('error', 'Failed to reset password');\n      }\n    );\n  }\n\n  showAlert(type: string, message: string) {\n    if (type === 'success') {\n      alert(message);\n    } else if (type === 'error') {\n      alert(message);\n    } else {\n      console.warn('Unsupported alert type:', type);\n    }\n  }\n\n  logout(): void {\n    this.apiService.logout().subscribe(\n      (response) => {\n      \n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n        localStorage.removeItem('user');\n        console.log('Logged out successfully');\n  \n        const expirationTime = response.expirationTime;\n  \n    \n        sessionStorage.clear();\n        this.router.navigate(['/posts']);\n      },\n      (error) => {\n        console.error('Logout failed:', error);\n      }\n    );\n  }\n  \n  \n}\n","<div class=\"supervisior-dashboard\">\n    <h1 class=\"supervisior-title\">Welcome, Supervisior!</h1>\n    <p class=\"supervisior-description\">This is the supervisior dashboard.</p>\n    <button class=\"btn logout-button red-button\" (click)=\"logout()\">Logout</button>\n    <button (click)=\"showPasswordResetForm = true\">Reset Password</button>\n\n    <div *ngIf=\"showPasswordResetForm\">\n      <h2>Password Reset</h2>\n      <form (submit)=\"onResetPasswordSubmit()\">\n        <label for=\"oldPassword\">Old Password:</label>\n        <input type=\"password\" id=\"oldPassword\" name=\"oldPassword\" [(ngModel)]=\"oldPassword\" required>\n  \n        <label for=\"newPassword\">New Password:</label>\n        <input type=\"password\" id=\"newPassword\" name=\"newPassword\" [(ngModel)]=\"newPassword\" required>\n  \n        <button type=\"submit\">Reset Password</button>\n        <button type=\"button\" (click)=\"cancelResetPassword()\">Cancel</button>\n      </form>\n    </div>\n  \n\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Roles</th>\n          <th>Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        <ng-container *ngFor=\"let user of users\">\n          <tr>\n            <td>{{ user.id }}</td>\n            <td>{{ user.name }}</td>\n            <td>{{ user.email }}</td>\n            <td>{{ user.roles }}</td>\n            <td>\n              <button class=\"update-button\" (click)=\"performUpdate(user.id)\">Update</button>\n            </td>\n          </tr>\n          <tr *ngIf=\"user.isEditing\">\n            <td colspan=\"5\">\n              <form (submit)=\"performUpdate(user.id)\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"user.name\" required>\n                \n                <label for=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"user.email\" required>\n                \n                <label for=\"password\">Password:</label>\n                <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"user.password\" required>\n                \n                <label for=\"roles\">Roles:</label>\n                <input type=\"text\" id=\"roles\" name=\"roles\" [(ngModel)]=\"user.roles\" required>\n                \n                <button type=\"submit\" class=\"update-submit-button\">Update</button>\n                <button class=\"update-cancel-button\" (click)=\"cancelUpdate(user)\">Cancel</button>\n              </form>\n            </td>\n          </tr>\n        </ng-container>\n      </tbody>\n    </table>\n  </div>\n  <div *ngIf=\"roles !== 'supervisior' && roles !== 'basic'\" class=\"unauthorized-access\">\n    <h1>Unauthorized Access</h1>\n    <p>Sorry, you do not have access to this page.</p>\n  </div>\n  \n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unauthorised',\n  templateUrl: './unauthorised.component.html',\n  styleUrls: ['./unauthorised.component.css']\n})\nexport class UnauthorisedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Oops!!Unauthorized Access</h1>\n<p>Sorry, you do not have access to this page.</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}